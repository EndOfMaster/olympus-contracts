{
  "address": "0xdbBFa7Dd7ba436236B02e5771aEfdd12ba356a37",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IOHM",
          "name": "_ohm",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ohm",
      "outputs": [
        {
          "internalType": "contract IOHM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "otherOhm",
      "outputs": [
        {
          "internalType": "contract IOHM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "otherPool",
      "outputs": [
        {
          "internalType": "contract OhmExchangePool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "reception",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract OhmExchangePool",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "setOtherOhm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "supplyOhm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4d6dc76013b80d3d84372cf957228e6f44a30caa0d34644539d86b970e0f81ab",
  "receipt": {
    "to": null,
    "from": "0xAE4bdBb0824C9B602589a5DaD2aD96C8A2AcC607",
    "contractAddress": "0xdbBFa7Dd7ba436236B02e5771aEfdd12ba356a37",
    "transactionIndex": 2,
    "gasUsed": "521828",
    "logsBloom": "0x
    "blockHash": "0xc12d09b32cdc245d88a3a849535532276d17aa9e651d5caba0e81f619c4b9994",
    "transactionHash": "0x4d6dc76013b80d3d84372cf957228e6f44a30caa0d34644539d86b970e0f81ab",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 30533469,
        "transactionHash": "0x4d6dc76013b80d3d84372cf957228e6f44a30caa0d34644539d86b970e0f81ab",
        "address": "0xdbBFa7Dd7ba436236B02e5771aEfdd12ba356a37",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ae4bdbb0824c9b602589a5dad2ad96c8a2acc607"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0xc12d09b32cdc245d88a3a849535532276d17aa9e651d5caba0e81f619c4b9994"
      }
    ],
    "blockNumber": 30533469,
    "cumulativeGasUsed": "696195",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc3593B4A74433A396Fe46eAEfD5F872AefcCE246"
  ],
  "solcInputHash": "c11c2ee64510471a09c1ebad4051e611",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IOHM\",\"name\":\"_ohm\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ohm\",\"outputs\":[{\"internalType\":\"contract IOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherOhm\",\"outputs\":[{\"internalType\":\"contract IOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherPool\",\"outputs\":[{\"internalType\":\"contract OhmExchangePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reception\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract OhmExchangePool\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"setOtherOhm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"supplyOhm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reception(address,uint256)\":{\"details\":\"transfer call this, Direct notification to another\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transfer(uint256)\":{\"details\":\"user call this\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OhmExchangePool.sol\":\"OhmExchangePool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/OhmExchangePool.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\nimport \\\"./interfaces/IOHM.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract OhmExchangePool is Ownable {\\n    IOHM public immutable ohm;\\n\\n    OhmExchangePool public otherPool;\\n    IOHM public otherOhm;\\n\\n    constructor(IOHM _ohm) Ownable() {\\n        ohm = _ohm;\\n    }\\n\\n    function setOtherOhm(OhmExchangePool _pool) external onlyOwner {\\n        otherPool = _pool;\\n        otherOhm = _pool.ohm();\\n        ohm.approve(address(otherPool), type(uint256).max);\\n    }\\n\\n    ///@dev user call this\\n    function transfer(uint256 _amount) external {\\n        ohm.transferFrom(msg.sender, address(this), _amount);\\n        otherPool.reception(msg.sender, _amount);\\n    }\\n\\n    ///@dev transfer call this, Direct notification to another\\n    function reception(address _recipient, uint256 _amount) external {\\n        require(msg.sender == address(otherPool), \\\"OhmExchangePool: must be other pool\\\");\\n        otherOhm.transferFrom(address(otherPool), address(this), _amount);\\n        ohm.transfer(_recipient, _amount);\\n    }\\n\\n    function supplyOhm(uint256 _amount) external onlyOwner {\\n        ohm.mint(address(this), _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x952c82b6a7175c54fa2be59337494e282e901cbe6980db4d0fc488012d755d7b\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5e7c863b5ab16bc16a88ab5ce889edd21e9f834d3bcb6817818e8f3f16726694\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IOHM.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IOHM is IERC20 {\\n    function mint(address account_, uint256 amount_) external;\\n\\n    function burn(uint256 amount) external;\\n\\n    function burnFrom(address account_, uint256 amount_) external;\\n}\\n\",\"keccak256\":\"0xa7c8137b4afb4645fb9226c0fc86e420bef4fbd4111aa2cd379d1ba684a62436\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161090138038061090183398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b6080516108026100ff6000396000818160a801528181610274015281816103f30152818161048701526105e101526108026000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637a31cb8f116100665780637a31cb8f146101295780638da5cb5b1461013c578063c60c321a1461014d578063dd6df29414610160578063f2fde38b1461017357600080fd5b806302b1d239146100a357806307d221b1146100e65780630d9af41d146100fb57806312514bba1461010e578063715018a614610121575b600080fd5b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100f96100f4366004610718565b610186565b005b6100f961010936600461073c565b6102e7565b6100f961011c366004610768565b610465565b6100f9610565565b6002546100ca906001600160a01b031681565b6000546001600160a01b03166100ca565b6001546100ca906001600160a01b031681565b6100f961016e366004610768565b61059b565b6100f9610181366004610718565b610618565b6000546001600160a01b031633146101b95760405162461bcd60e51b81526004016101b090610781565b60405180910390fd5b600180546001600160a01b0319166001600160a01b038316908117909155604080516302b1d23960e01b815290516302b1d239916004808201926020929091908290030181865afa158015610212573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023691906107b6565b600280546001600160a01b0319166001600160a01b0392831617905560015460405163095ea7b360e01b8152908216600482015260001960248201527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af11580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e391906107d3565b5050565b6001546001600160a01b0316331461034d5760405162461bcd60e51b815260206004820152602360248201527f4f686d45786368616e6765506f6f6c3a206d757374206265206f7468657220706044820152621bdbdb60ea1b60648201526084016101b0565b6002546001546040516323b872dd60e01b81526001600160a01b039182166004820152306024820152604481018490529116906323b872dd906064016020604051808303816000875af11580156103a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cc91906107d3565b5060405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046091906107d3565b505050565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc91906107d3565b50600154604051630d9af41d60e01b8152336004820152602481018390526001600160a01b0390911690630d9af41d906044015b600060405180830381600087803b15801561054a57600080fd5b505af115801561055e573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331461058f5760405162461bcd60e51b81526004016101b090610781565b61059960006106b3565b565b6000546001600160a01b031633146105c55760405162461bcd60e51b81526004016101b090610781565b6040516340c10f1960e01b8152306004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401610530565b6000546001600160a01b031633146106425760405162461bcd60e51b81526004016101b090610781565b6001600160a01b0381166106a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101b0565b6106b0816106b3565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146106b057600080fd5b60006020828403121561072a57600080fd5b813561073581610703565b9392505050565b6000806040838503121561074f57600080fd5b823561075a81610703565b946020939093013593505050565b60006020828403121561077a57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156107c857600080fd5b815161073581610703565b6000602082840312156107e557600080fd5b8151801515811461073557600080fdfea164736f6c634300080a000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80637a31cb8f116100665780637a31cb8f146101295780638da5cb5b1461013c578063c60c321a1461014d578063dd6df29414610160578063f2fde38b1461017357600080fd5b806302b1d239146100a357806307d221b1146100e65780630d9af41d146100fb57806312514bba1461010e578063715018a614610121575b600080fd5b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100f96100f4366004610718565b610186565b005b6100f961010936600461073c565b6102e7565b6100f961011c366004610768565b610465565b6100f9610565565b6002546100ca906001600160a01b031681565b6000546001600160a01b03166100ca565b6001546100ca906001600160a01b031681565b6100f961016e366004610768565b61059b565b6100f9610181366004610718565b610618565b6000546001600160a01b031633146101b95760405162461bcd60e51b81526004016101b090610781565b60405180910390fd5b600180546001600160a01b0319166001600160a01b038316908117909155604080516302b1d23960e01b815290516302b1d239916004808201926020929091908290030181865afa158015610212573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023691906107b6565b600280546001600160a01b0319166001600160a01b0392831617905560015460405163095ea7b360e01b8152908216600482015260001960248201527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af11580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e391906107d3565b5050565b6001546001600160a01b0316331461034d5760405162461bcd60e51b815260206004820152602360248201527f4f686d45786368616e6765506f6f6c3a206d757374206265206f7468657220706044820152621bdbdb60ea1b60648201526084016101b0565b6002546001546040516323b872dd60e01b81526001600160a01b039182166004820152306024820152604481018490529116906323b872dd906064016020604051808303816000875af11580156103a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cc91906107d3565b5060405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046091906107d3565b505050565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc91906107d3565b50600154604051630d9af41d60e01b8152336004820152602481018390526001600160a01b0390911690630d9af41d906044015b600060405180830381600087803b15801561054a57600080fd5b505af115801561055e573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331461058f5760405162461bcd60e51b81526004016101b090610781565b61059960006106b3565b565b6000546001600160a01b031633146105c55760405162461bcd60e51b81526004016101b090610781565b6040516340c10f1960e01b8152306004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401610530565b6000546001600160a01b031633146106425760405162461bcd60e51b81526004016101b090610781565b6001600160a01b0381166106a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101b0565b6106b0816106b3565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146106b057600080fd5b60006020828403121561072a57600080fd5b813561073581610703565b9392505050565b6000806040838503121561074f57600080fd5b823561075a81610703565b946020939093013593505050565b60006020828403121561077a57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156107c857600080fd5b815161073581610703565b6000602082840312156107e557600080fd5b8151801515811461073557600080fdfea164736f6c634300080a000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "reception(address,uint256)": {
        "details": "transfer call this, Direct notification to another"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transfer(uint256)": {
        "details": "user call this"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1104,
        "contract": "contracts/OhmExchangePool.sol:OhmExchangePool",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4474,
        "contract": "contracts/OhmExchangePool.sol:OhmExchangePool",
        "label": "otherPool",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(OhmExchangePool)4610"
      },
      {
        "astId": 4477,
        "contract": "contracts/OhmExchangePool.sol:OhmExchangePool",
        "label": "otherOhm",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IOHM)14922"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IOHM)14922": {
        "encoding": "inplace",
        "label": "contract IOHM",
        "numberOfBytes": "20"
      },
      "t_contract(OhmExchangePool)4610": {
        "encoding": "inplace",
        "label": "contract OhmExchangePool",
        "numberOfBytes": "20"
      }
    }
  }
}