{
  "address": "0x60813AA360E148313BA67B5D64bc1F7Cf6941d96",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oldOHM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldsOHM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldTreasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldStaking",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldwsOHM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sushi",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uni",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timelock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_authority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IOlympusAuthority",
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Defunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staking",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "Migrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "block",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "TimelockStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract IOlympusAuthority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "enum OlympusTokenMigrator.TYPE",
          "name": "_to",
          "type": "uint8"
        }
      ],
      "name": "bridgeBack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "reserve",
          "type": "address"
        }
      ],
      "name": "defund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gOHM",
      "outputs": [
        {
          "internalType": "contract IgOHM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "enum OlympusTokenMigrator.TYPE",
          "name": "_from",
          "type": "uint8"
        },
        {
          "internalType": "enum OlympusTokenMigrator.TYPE",
          "name": "_to",
          "type": "uint8"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OlympusTokenMigrator.TYPE",
          "name": "_to",
          "type": "uint8"
        }
      ],
      "name": "migrateAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newTreasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newStaking",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOHM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newsOHM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        }
      ],
      "name": "migrateContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "sushi",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minB",
          "type": "uint256"
        }
      ],
      "name": "migrateLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "migrateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOHM",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newStaking",
      "outputs": [
        {
          "internalType": "contract IStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newTreasury",
      "outputs": [
        {
          "internalType": "contract ITreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ohmMigrated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldOHM",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldStaking",
      "outputs": [
        {
          "internalType": "contract IStakingV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldTreasury",
      "outputs": [
        {
          "internalType": "contract ITreasuryV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldsOHM",
      "outputs": [
        {
          "internalType": "contract IsOHM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldwsOHM",
      "outputs": [
        {
          "internalType": "contract IwsOHM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IOlympusAuthority",
          "name": "_newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gOHM",
          "type": "address"
        }
      ],
      "name": "setgOHM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shutdown",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sushiRouter",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniRouter",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x170118fc097d9f89b60c534c2954003b7aa6f146ab13f7471d8adff98cb85388",
  "receipt": {
    "to": null,
    "from": "0xAE4bdBb0824C9B602589a5DaD2aD96C8A2AcC607",
    "contractAddress": "0x60813AA360E148313BA67B5D64bc1F7Cf6941d96",
    "transactionIndex": 3,
    "gasUsed": "3149100",
    "logsBloom": "0x
    "blockHash": "0x9be3c4fc2902eef9a9c679ef26268ad3ad2fc2adb7e6d8ecf756365ef7159f94",
    "transactionHash": "0x170118fc097d9f89b60c534c2954003b7aa6f146ab13f7471d8adff98cb85388",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 30369534,
        "transactionHash": "0x170118fc097d9f89b60c534c2954003b7aa6f146ab13f7471d8adff98cb85388",
        "address": "0x60813AA360E148313BA67B5D64bc1F7Cf6941d96",
        "topics": [
          "0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad",
          "0x000000000000000000000000c6030f3cc578f93dc438c6a51acabe81f45b358d"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x9be3c4fc2902eef9a9c679ef26268ad3ad2fc2adb7e6d8ecf756365ef7159f94"
      }
    ],
    "blockNumber": 30369534,
    "cumulativeGasUsed": "3322231",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE68305314744EA5e6AD321d4Edf0507473d629e9",
    "0xEE173BCFfc24c4b637294EcAb025d46Ff46b4692",
    "0xdeFCA54E6e1B2767538E8700892d240BFcD5ba23",
    "0x4c49e6A1E69eb0117Db03d6f2717a1e8E7E9938C",
    "0x0235F7762e983F9FD22dBd4851A3ab69848e7187",
    "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0",
    "0xc6030F3Cc578F93Dc438c6a51AcabE81f45b358D"
  ],
  "solcInputHash": "415a74e64dcc6d1bfdf3e859001f9a3c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldOHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldsOHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldStaking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldwsOHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uni\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IOlympusAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Defunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staking\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"Migrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"TimelockStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"enum OlympusTokenMigrator.TYPE\",\"name\":\"_to\",\"type\":\"uint8\"}],\"name\":\"bridgeBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"}],\"name\":\"defund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gOHM\",\"outputs\":[{\"internalType\":\"contract IgOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"enum OlympusTokenMigrator.TYPE\",\"name\":\"_from\",\"type\":\"uint8\"},{\"internalType\":\"enum OlympusTokenMigrator.TYPE\",\"name\":\"_to\",\"type\":\"uint8\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OlympusTokenMigrator.TYPE\",\"name\":\"_to\",\"type\":\"uint8\"}],\"name\":\"migrateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newStaking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newsOHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"migrateContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"sushi\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minB\",\"type\":\"uint256\"}],\"name\":\"migrateLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOHM\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newStaking\",\"outputs\":[{\"internalType\":\"contract IStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newTreasury\",\"outputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ohmMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldOHM\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldStaking\",\"outputs\":[{\"internalType\":\"contract IStakingV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldTreasury\",\"outputs\":[{\"internalType\":\"contract ITreasuryV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldsOHM\",\"outputs\":[{\"internalType\":\"contract IsOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldwsOHM\",\"outputs\":[{\"internalType\":\"contract IwsOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gOHM\",\"type\":\"address\"}],\"name\":\"setgOHM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"migrateLP(address,bool,address,uint256,uint256)\":{\"notice\":\"Migrate LP and pair with new OHM\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/migration/OlympusTokenMigrator.sol\":\"OlympusTokenMigrator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5e7c863b5ab16bc16a88ab5ce889edd21e9f834d3bcb6817818e8f3f16726694\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IOlympusAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IOlympusAuthority {\\n    /* ========== EVENTS ========== */\\n\\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n\\n    event GovernorPulled(address indexed from, address indexed to);\\n    event GuardianPulled(address indexed from, address indexed to);\\n    event PolicyPulled(address indexed from, address indexed to);\\n    event VaultPulled(address indexed from, address indexed to);\\n\\n    /* ========== VIEW ========== */\\n\\n    function governor() external view returns (address);\\n\\n    function guardian() external view returns (address);\\n\\n    function policy() external view returns (address);\\n\\n    function vault() external view returns (address);\\n}\\n\",\"keccak256\":\"0x0c9cf18c1016ed19a7a79262bba3ff4704b37f83dc94917687782c7fb13bc583\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IOwnable {\\n    function owner() external view returns (address);\\n\\n    function renounceManagement() external;\\n\\n    function pushManagement(address newOwner_) external;\\n\\n    function pullManagement() external;\\n}\\n\",\"keccak256\":\"0xc1f818d87e823488c6004c50f0daba63d6ad2f0bfe46f19e4352d2000e51400e\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IStaking.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IStaking {\\n    function stake(\\n        address _to,\\n        uint256 _amount,\\n        bool _rebasing,\\n        bool _claim\\n    ) external returns (uint256);\\n\\n    function claim(address _recipient, bool _rebasing) external returns (uint256);\\n\\n    function forfeit() external returns (uint256);\\n\\n    function toggleLock() external;\\n\\n    function unstake(\\n        address _to,\\n        uint256 _amount,\\n        bool _trigger,\\n        bool _rebasing\\n    ) external returns (uint256);\\n\\n    function wrap(address _to, uint256 _amount) external returns (uint256 gBalance_);\\n\\n    function unwrap(address _to, uint256 _amount) external returns (uint256 sBalance_);\\n\\n    function rebase() external;\\n\\n    function index() external view returns (uint256);\\n\\n    function contractBalance() external view returns (uint256);\\n\\n    function totalStaked() external view returns (uint256);\\n\\n    function supplyInWarmup() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xa0b066a84f026eb8baf8d1f01dbaa5faa58b899e8d2af4558b2abf8ce7e2bd1c\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IStakingV1.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IStakingV1 {\\n    function unstake(uint256 _amount, bool _trigger) external;\\n\\n    function index() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x0bef419a1a87602fe7bbf45794755afea40d3436a7e2c6658f3fc7db74dc7129\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface ITreasury {\\n    function deposit(\\n        uint256 _amount,\\n        address _token,\\n        uint256 _profit\\n    ) external returns (uint256);\\n\\n    function withdraw(uint256 _amount, address _token) external;\\n\\n    function tokenValue(address _token, uint256 _amount) external view returns (uint256 value_);\\n\\n    function mint(address _recipient, uint256 _amount) external;\\n\\n    function manage(address _token, uint256 _amount) external;\\n\\n    function incurDebt(uint256 amount_, address token_) external;\\n\\n    function repayDebtWithReserve(uint256 amount_, address token_) external;\\n\\n    function excessReserves() external view returns (uint256);\\n\\n    function baseSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x6f4e16b5c162d5a2fbd40e764ca3b5cdf6e903409c021fce1982f4439de68fcb\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/ITreasuryV1.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface ITreasuryV1 {\\n    function withdraw(uint256 amount, address token) external;\\n\\n    function manage(address token, uint256 amount) external;\\n\\n    function valueOf(address token, uint256 amount) external view returns (uint256);\\n\\n    function excessReserves() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcf32875a702f50b0dffe8a9aa72a6466dd2544accc89a63bfc137b33ce9a2a35\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IUniswapV2Router.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IUniswapV2Router {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n}\\n\",\"keccak256\":\"0x9213ea78c1379b90a3b4a2dfed42bc9a06cfe586b88ff4160f2b379ccd5223f3\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IgOHM.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IgOHM is IERC20 {\\n    function mint(address _to, uint256 _amount) external;\\n\\n    function burn(address _from, uint256 _amount) external;\\n\\n    function index() external view returns (uint256);\\n\\n    function balanceFrom(uint256 _amount) external view returns (uint256);\\n\\n    function balanceTo(uint256 _amount) external view returns (uint256);\\n\\n    function migrate(address _staking, address _sOHM) external;\\n}\\n\",\"keccak256\":\"0x975a03fd4822004e059d727cf32e474b5d3a12b73c9246afca4cab2551196698\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IsOHM.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IsOHM is IERC20 {\\n    function rebase(uint256 ohmProfit_, uint256 epoch_) external returns (uint256);\\n\\n    function circulatingSupply() external view returns (uint256);\\n\\n    function gonsForBalance(uint256 amount) external view returns (uint256);\\n\\n    function balanceForGons(uint256 gons) external view returns (uint256);\\n\\n    function index() external view returns (uint256);\\n\\n    function toG(uint256 amount) external view returns (uint256);\\n\\n    function fromG(uint256 amount) external view returns (uint256);\\n\\n    function changeDebt(\\n        uint256 amount,\\n        address debtor,\\n        bool add\\n    ) external;\\n\\n    function debtBalances(address _address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x57486feac9a75b08024d2781d5a94c2a35a8a46f04c56771d6f20a646b3d65ff\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IwsOHM.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n// Old wsOHM interface\\ninterface IwsOHM is IERC20 {\\n    function wrap(uint256 _amount) external returns (uint256);\\n\\n    function unwrap(uint256 _amount) external returns (uint256);\\n\\n    function wOHMTosOHM(uint256 _amount) external view returns (uint256);\\n\\n    function sOHMTowOHM(uint256 _amount) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7d275fb2d8dae2d6da7de739ccbc9d948177b80ceef46f32f9767c0e5417380f\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\nimport {IERC20} from \\\"../interfaces/IERC20.sol\\\";\\n\\n/// @notice Safe IERC20 and ETH transfer library that safely handles missing return values.\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\\n/// Taken from Solmate\\nlibrary SafeERC20 {\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transfer.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.approve.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        (bool success, ) = to.call{value: amount}(new bytes(0));\\n\\n        require(success, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x060047addcb2f9e0c536d6bea7dd50384b02c08acab2c5b761067544b3a8a0db\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\\nlibrary SafeMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        assert(a == b * c + (a % b)); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    // Only used in the  BondingCalculator.sol\\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\\n        if (a > 3) {\\n            c = a;\\n            uint256 b = add(div(a, 2), 1);\\n            while (b < c) {\\n                c = b;\\n                b = div(add(div(a, b), b), 2);\\n            }\\n        } else if (a != 0) {\\n            c = 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x521bd2b4dea1c478051130fd4753d1f22ba6d59819d4df95b8b5ed75f04d1291\",\"license\":\"AGPL-3.0\"},\"contracts/migration/OlympusTokenMigrator.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.10;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IsOHM.sol\\\";\\nimport \\\"../interfaces/IwsOHM.sol\\\";\\nimport \\\"../interfaces/IgOHM.sol\\\";\\nimport \\\"../interfaces/ITreasury.sol\\\";\\nimport \\\"../interfaces/IStaking.sol\\\";\\nimport \\\"../interfaces/IOwnable.sol\\\";\\nimport \\\"../interfaces/IUniswapV2Router.sol\\\";\\nimport \\\"../interfaces/IStakingV1.sol\\\";\\nimport \\\"../interfaces/ITreasuryV1.sol\\\";\\n\\nimport \\\"../types/OlympusAccessControlled.sol\\\";\\n\\nimport \\\"../libraries/SafeMath.sol\\\";\\nimport \\\"../libraries/SafeERC20.sol\\\";\\n\\ncontract OlympusTokenMigrator is OlympusAccessControlled {\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n    using SafeERC20 for IgOHM;\\n    using SafeERC20 for IsOHM;\\n    using SafeERC20 for IwsOHM;\\n\\n    /* ========== MIGRATION ========== */\\n\\n    event TimelockStarted(uint256 block, uint256 end);\\n    event Migrated(address staking, address treasury);\\n    event Funded(uint256 amount);\\n    event Defunded(uint256 amount);\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IERC20 public immutable oldOHM;\\n    IsOHM public immutable oldsOHM;\\n    IwsOHM public immutable oldwsOHM;\\n    ITreasuryV1 public immutable oldTreasury;\\n    IStakingV1 public immutable oldStaking;\\n\\n    IUniswapV2Router public immutable sushiRouter;\\n    IUniswapV2Router public immutable uniRouter;\\n\\n    IgOHM public gOHM;\\n    ITreasury public newTreasury;\\n    IStaking public newStaking;\\n    IERC20 public newOHM;\\n\\n    bool public ohmMigrated;\\n    bool public shutdown;\\n\\n    uint256 public immutable timelockLength;\\n    uint256 public timelockEnd;\\n\\n    uint256 public oldSupply;\\n\\n    constructor(\\n        address _oldOHM,\\n        address _oldsOHM,\\n        address _oldTreasury,\\n        address _oldStaking,\\n        address _oldwsOHM,\\n        address _sushi,\\n        address _uni,\\n        uint256 _timelock,\\n        address _authority\\n    ) OlympusAccessControlled(IOlympusAuthority(_authority)) {\\n        require(_oldOHM != address(0), \\\"Zero address: OHM\\\");\\n        oldOHM = IERC20(_oldOHM);\\n        require(_oldsOHM != address(0), \\\"Zero address: sOHM\\\");\\n        oldsOHM = IsOHM(_oldsOHM);\\n        require(_oldTreasury != address(0), \\\"Zero address: Treasury\\\");\\n        oldTreasury = ITreasuryV1(_oldTreasury);\\n        require(_oldStaking != address(0), \\\"Zero address: Staking\\\");\\n        oldStaking = IStakingV1(_oldStaking);\\n        require(_oldwsOHM != address(0), \\\"Zero address: wsOHM\\\");\\n        oldwsOHM = IwsOHM(_oldwsOHM);\\n        require(_sushi != address(0), \\\"Zero address: Sushi\\\");\\n        sushiRouter = IUniswapV2Router(_sushi);\\n        require(_uni != address(0), \\\"Zero address: Uni\\\");\\n        uniRouter = IUniswapV2Router(_uni);\\n        timelockLength = _timelock;\\n    }\\n\\n    /* ========== MIGRATION ========== */\\n\\n    enum TYPE {\\n        UNSTAKED,\\n        STAKED,\\n        WRAPPED\\n    }\\n\\n    // migrate OHMv1, sOHMv1, or wsOHM for OHMv2, sOHMv2, or gOHM\\n    function migrate(\\n        uint256 _amount,\\n        TYPE _from,\\n        TYPE _to\\n    ) external {\\n        require(!shutdown, \\\"Shut down\\\");\\n\\n        uint256 wAmount = oldwsOHM.sOHMTowOHM(_amount);\\n\\n        if (_from == TYPE.UNSTAKED) {\\n            require(ohmMigrated, \\\"Only staked until migration\\\");\\n            oldOHM.safeTransferFrom(msg.sender, address(this), _amount);\\n        } else if (_from == TYPE.STAKED) {\\n            oldsOHM.safeTransferFrom(msg.sender, address(this), _amount);\\n        } else {\\n            oldwsOHM.safeTransferFrom(msg.sender, address(this), _amount);\\n            wAmount = _amount;\\n        }\\n\\n        if (ohmMigrated) {\\n            require(oldSupply >= oldOHM.totalSupply(), \\\"OHMv1 minted\\\");\\n            _send(wAmount, _to);\\n        } else {\\n            gOHM.mint(msg.sender, wAmount);\\n        }\\n    }\\n\\n    // migrate all olympus tokens held\\n    function migrateAll(TYPE _to) external {\\n        require(!shutdown, \\\"Shut down\\\");\\n\\n        uint256 ohmBal = 0;\\n        uint256 sOHMBal = oldsOHM.balanceOf(msg.sender);\\n        uint256 wsOHMBal = oldwsOHM.balanceOf(msg.sender);\\n\\n        if (oldOHM.balanceOf(msg.sender) > 0 && ohmMigrated) {\\n            ohmBal = oldOHM.balanceOf(msg.sender);\\n            oldOHM.safeTransferFrom(msg.sender, address(this), ohmBal);\\n        }\\n        if (sOHMBal > 0) {\\n            oldsOHM.safeTransferFrom(msg.sender, address(this), sOHMBal);\\n        }\\n        if (wsOHMBal > 0) {\\n            oldwsOHM.safeTransferFrom(msg.sender, address(this), wsOHMBal);\\n        }\\n\\n        uint256 wAmount = wsOHMBal.add(oldwsOHM.sOHMTowOHM(ohmBal.add(sOHMBal)));\\n        if (ohmMigrated) {\\n            require(oldSupply >= oldOHM.totalSupply(), \\\"OHMv1 minted\\\");\\n            _send(wAmount, _to);\\n        } else {\\n            gOHM.mint(msg.sender, wAmount);\\n        }\\n    }\\n\\n    // send preferred token\\n    function _send(uint256 wAmount, TYPE _to) internal {\\n        if (_to == TYPE.WRAPPED) {\\n            gOHM.safeTransfer(msg.sender, wAmount);\\n        } else if (_to == TYPE.STAKED) {\\n            newStaking.unwrap(msg.sender, wAmount);\\n        } else if (_to == TYPE.UNSTAKED) {\\n            newStaking.unstake(msg.sender, wAmount, false, false);\\n        }\\n    }\\n\\n    // bridge back to OHM, sOHM, or wsOHM\\n    function bridgeBack(uint256 _amount, TYPE _to) external {\\n        if (!ohmMigrated) {\\n            gOHM.burn(msg.sender, _amount);\\n        } else {\\n            gOHM.safeTransferFrom(msg.sender, address(this), _amount);\\n        }\\n\\n        uint256 amount = oldwsOHM.wOHMTosOHM(_amount);\\n        // error throws if contract does not have enough of type to send\\n        if (_to == TYPE.UNSTAKED) {\\n            oldOHM.safeTransfer(msg.sender, amount);\\n        } else if (_to == TYPE.STAKED) {\\n            oldsOHM.safeTransfer(msg.sender, amount);\\n        } else if (_to == TYPE.WRAPPED) {\\n            oldwsOHM.safeTransfer(msg.sender, _amount);\\n        }\\n    }\\n\\n    /* ========== OWNABLE ========== */\\n\\n    // halt migrations (but not bridging back)\\n    function halt() external onlyPolicy {\\n        require(!ohmMigrated, \\\"Migration has occurred\\\");\\n        shutdown = !shutdown;\\n    }\\n\\n    // withdraw backing of migrated OHM\\n    function defund(address reserve) external onlyGovernor {\\n        require(ohmMigrated, \\\"Migration has not begun\\\");\\n        require(timelockEnd < block.number && timelockEnd != 0, \\\"Timelock not complete\\\");\\n\\n        oldwsOHM.unwrap(oldwsOHM.balanceOf(address(this)));\\n\\n        uint256 amountToUnstake = oldsOHM.balanceOf(address(this));\\n        oldsOHM.approve(address(oldStaking), amountToUnstake);\\n        oldStaking.unstake(amountToUnstake, false);\\n\\n        uint256 balance = oldOHM.balanceOf(address(this));\\n\\n        if (balance > oldSupply) {\\n            oldSupply = 0;\\n        } else {\\n            oldSupply -= balance;\\n        }\\n\\n        uint256 amountToWithdraw = balance.mul(1e9);\\n        oldOHM.approve(address(oldTreasury), amountToWithdraw);\\n        oldTreasury.withdraw(amountToWithdraw, reserve);\\n        IERC20(reserve).safeTransfer(address(newTreasury), IERC20(reserve).balanceOf(address(this)));\\n\\n        emit Defunded(balance);\\n    }\\n\\n    // start timelock to send backing to new treasury\\n    function startTimelock() external onlyGovernor {\\n        require(timelockEnd == 0, \\\"Timelock set\\\");\\n        timelockEnd = block.number.add(timelockLength);\\n\\n        emit TimelockStarted(block.number, timelockEnd);\\n    }\\n\\n    // set gOHM address\\n    function setgOHM(address _gOHM) external onlyGovernor {\\n        require(address(gOHM) == address(0), \\\"Already set\\\");\\n        require(_gOHM != address(0), \\\"Zero address: gOHM\\\");\\n\\n        gOHM = IgOHM(_gOHM);\\n    }\\n\\n    // call internal migrate token function\\n    function migrateToken(address token) external onlyGovernor {\\n        _migrateToken(token, false);\\n    }\\n\\n    /**\\n     *   @notice Migrate LP and pair with new OHM\\n     */\\n    function migrateLP(\\n        address pair,\\n        bool sushi,\\n        address token,\\n        uint256 _minA,\\n        uint256 _minB\\n    ) external onlyGovernor {\\n        uint256 oldLPAmount = IERC20(pair).balanceOf(address(oldTreasury));\\n        oldTreasury.manage(pair, oldLPAmount);\\n\\n        IUniswapV2Router router = sushiRouter;\\n        if (!sushi) {\\n            router = uniRouter;\\n        }\\n\\n        IERC20(pair).approve(address(router), oldLPAmount);\\n        (uint256 amountA, uint256 amountB) = router.removeLiquidity(\\n            token,\\n            address(oldOHM),\\n            oldLPAmount,\\n            _minA,\\n            _minB,\\n            address(this),\\n            block.timestamp\\n        );\\n\\n        newTreasury.mint(address(this), amountB);\\n\\n        IERC20(token).approve(address(router), amountA);\\n        newOHM.approve(address(router), amountB);\\n\\n        router.addLiquidity(\\n            token,\\n            address(newOHM),\\n            amountA,\\n            amountB,\\n            amountA,\\n            amountB,\\n            address(newTreasury),\\n            block.timestamp\\n        );\\n    }\\n\\n    // Failsafe function to allow owner to withdraw funds sent directly to contract in case someone sends non-ohm tokens to the contract\\n    function withdrawToken(\\n        address tokenAddress,\\n        uint256 amount,\\n        address recipient\\n    ) external onlyGovernor {\\n        require(tokenAddress != address(0), \\\"Token address cannot be 0x0\\\");\\n        require(tokenAddress != address(gOHM), \\\"Cannot withdraw: gOHM\\\");\\n        require(tokenAddress != address(oldOHM), \\\"Cannot withdraw: old-OHM\\\");\\n        require(tokenAddress != address(oldsOHM), \\\"Cannot withdraw: old-sOHM\\\");\\n        require(tokenAddress != address(oldwsOHM), \\\"Cannot withdraw: old-wsOHM\\\");\\n        require(amount > 0, \\\"Withdraw value must be greater than 0\\\");\\n        if (recipient == address(0)) {\\n            recipient = msg.sender; // if no address is specified the value will will be withdrawn to Owner\\n        }\\n\\n        IERC20 tokenContract = IERC20(tokenAddress);\\n        uint256 contractBalance = tokenContract.balanceOf(address(this));\\n        if (amount > contractBalance) {\\n            amount = contractBalance; // set the withdrawal amount equal to balance within the account.\\n        }\\n        // transfer the token from address of this contract\\n        tokenContract.safeTransfer(recipient, amount);\\n    }\\n\\n    // migrate contracts\\n    function migrateContracts(\\n        address _newTreasury,\\n        address _newStaking,\\n        address _newOHM,\\n        address _newsOHM,\\n        address _reserve\\n    ) external onlyGovernor {\\n        require(!ohmMigrated, \\\"Already migrated\\\");\\n        ohmMigrated = true;\\n        shutdown = false;\\n\\n        require(_newTreasury != address(0), \\\"Zero address: Treasury\\\");\\n        newTreasury = ITreasury(_newTreasury);\\n        require(_newStaking != address(0), \\\"Zero address: Staking\\\");\\n        newStaking = IStaking(_newStaking);\\n        require(_newOHM != address(0), \\\"Zero address: OHM\\\");\\n        newOHM = IERC20(_newOHM);\\n\\n        oldSupply = oldOHM.totalSupply(); // log total supply at time of migration\\n\\n        gOHM.migrate(_newStaking, _newsOHM); // change gOHM minter\\n\\n        _migrateToken(_reserve, true); // will deposit tokens into new treasury so reserves can be accounted for\\n\\n        _fund(oldsOHM.circulatingSupply()); // fund with current staked supply for token migration\\n\\n        emit Migrated(_newStaking, _newTreasury);\\n    }\\n\\n    /* ========== INTERNAL FUNCTIONS ========== */\\n\\n    // fund contract with gOHM\\n    function _fund(uint256 _amount) internal {\\n        newTreasury.mint(address(this), _amount);\\n        newOHM.approve(address(newStaking), _amount);\\n        newStaking.stake(address(this), _amount, false, true); // stake and claim gOHM\\n\\n        emit Funded(_amount);\\n    }\\n\\n    /**\\n     *   @notice Migrate token from old treasury to new treasury\\n     */\\n    function _migrateToken(address token, bool deposit) internal {\\n        uint256 balance = IERC20(token).balanceOf(address(oldTreasury));\\n\\n        uint256 excessReserves = oldTreasury.excessReserves();\\n        uint256 tokenValue = oldTreasury.valueOf(token, balance);\\n\\n        if (tokenValue > excessReserves) {\\n            tokenValue = excessReserves;\\n            balance = excessReserves * 10**9;\\n        }\\n\\n        oldTreasury.manage(token, balance);\\n\\n        if (deposit) {\\n            IERC20(token).safeApprove(address(newTreasury), balance);\\n            newTreasury.deposit(balance, token, tokenValue);\\n        } else {\\n            IERC20(token).safeTransfer(address(newTreasury), balance);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x50cd592152f415195b29eb0b8f56ed552da2267572858d7397e66393c85c6e60\",\"license\":\"AGPL-3.0\"},\"contracts/types/OlympusAccessControlled.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"../interfaces/IOlympusAuthority.sol\\\";\\n\\nabstract contract OlympusAccessControlled {\\n    /* ========== EVENTS ========== */\\n\\n    event AuthorityUpdated(IOlympusAuthority indexed authority);\\n\\n    string UNAUTHORIZED = \\\"UNAUTHORIZED\\\"; // save gas\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IOlympusAuthority public authority;\\n\\n    /* ========== Constructor ========== */\\n\\n    constructor(IOlympusAuthority _authority) {\\n        authority = _authority;\\n        emit AuthorityUpdated(_authority);\\n    }\\n\\n    /* ========== MODIFIERS ========== */\\n\\n    modifier onlyGovernor() {\\n        require(msg.sender == authority.governor(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyGuardian() {\\n        require(msg.sender == authority.guardian(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyPolicy() {\\n        require(msg.sender == authority.policy(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyVault() {\\n        require(msg.sender == authority.vault(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    /* ========== GOV ONLY ========== */\\n\\n    function setAuthority(IOlympusAuthority _newAuthority) external onlyGovernor {\\n        authority = _newAuthority;\\n        emit AuthorityUpdated(_newAuthority);\\n    }\\n}\\n\",\"keccak256\":\"0x23c50c844edd667dbb8491bc22b11292e17462f545e33544063cf2f10328904f\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6101c0604052600c6101808190526b15539055551213d49256915160a21b6101a09081526200003291600091906200033e565b503480156200004057600080fd5b5060405162003d7838038062003d78833981016040819052620000639162000401565b600180546001600160a01b0319166001600160a01b0383169081179091556040518291907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a2506001600160a01b038916620000fe5760405162461bcd60e51b81526020600482015260116024820152705a65726f20616464726573733a204f484d60781b60448201526064015b60405180910390fd5b6001600160a01b03808a166080528816620001515760405162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a20734f484d60701b6044820152606401620000f5565b6001600160a01b0380891660a0528716620001af5760405162461bcd60e51b815260206004820152601660248201527f5a65726f20616464726573733a205472656173757279000000000000000000006044820152606401620000f5565b6001600160a01b0380881660e05286166200020d5760405162461bcd60e51b815260206004820152601560248201527f5a65726f20616464726573733a205374616b696e6700000000000000000000006044820152606401620000f5565b6001600160a01b038087166101005285166200026c5760405162461bcd60e51b815260206004820152601360248201527f5a65726f20616464726573733a2077734f484d000000000000000000000000006044820152606401620000f5565b6001600160a01b0380861660c0528416620002ca5760405162461bcd60e51b815260206004820152601360248201527f5a65726f20616464726573733a205375736869000000000000000000000000006044820152606401620000f5565b6001600160a01b038085166101205283166200031d5760405162461bcd60e51b81526020600482015260116024820152705a65726f20616464726573733a20556e6960781b6044820152606401620000f5565b506001600160a01b03909116610140526101605250620004f0945050505050565b8280546200034c90620004b3565b90600052602060002090601f016020900481019282620003705760008555620003bb565b82601f106200038b57805160ff1916838001178555620003bb565b82800160010185558215620003bb579182015b82811115620003bb5782518255916020019190600101906200039e565b50620003c9929150620003cd565b5090565b5b80821115620003c95760008155600101620003ce565b80516001600160a01b0381168114620003fc57600080fd5b919050565b60008060008060008060008060006101208a8c0312156200042157600080fd5b6200042c8a620003e4565b98506200043c60208b01620003e4565b97506200044c60408b01620003e4565b96506200045c60608b01620003e4565b95506200046c60808b01620003e4565b94506200047c60a08b01620003e4565b93506200048c60c08b01620003e4565b925060e08a01519150620004a46101008b01620003e4565b90509295985092959850929598565b600181811c90821680620004c857607f821691505b60208210811415620004ea57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161014051610160516136fc6200067c6000396000818161023501526112640152600081816103680152611f9201526000818161032e0152611f690152600081816102cf015281816119fe0152611a890152600081816103d001528181611bfd01528181611c9001528181611e6c01528181611efc01528181612cb501528181612d3201528181612db80152612e780152600081816102fe015281816105140152818161069201528181610bc90152818161100f0152818161114c0152818161184f015281816123d6015281816125f7015261262e0152600081816102a80152818161065d01528181610b47015281816110fe0152818161161001528181611944015281816119d10152818161234801526125bc0152600081816103f701528181610609015281816106d101528181610ac5015281816110ab0152818161151601528181611b0401528181611bd00152818161204301528181612464015281816124ff0152818161258101526126da01526136fc6000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637a9e5e4b11610104578063d5f42869116100a2578063ec78f90b11610071578063ec78f90b14610463578063ed44527b14610476578063f96a600614610489578063fc0e74d11461049c57600080fd5b8063d5f42869146103f2578063d6fa376014610419578063dfd9e6851461042c578063e7a1705c1461043f57600080fd5b8063b29c7444116100de578063b29c74441461039d578063b71a6df3146103a5578063bf7e214f146103b8578063cf0ef516146103cb57600080fd5b80637a9e5e4b14610350578063a0e47bf614610363578063abacbb2f1461038a57600080fd5b80634579b8b4116101715780635ed7ca5b1161014b5780635ed7ca5b146102f157806360ca094e146102f9578063694d6635146103205780636d13582c1461032957600080fd5b80634579b8b4146102905780634ed3b35f146102a35780634edf8980146102ca57600080fd5b8063219a1f81116101ad578063219a1f8114610230578063245c0e99146102575780633ccdbb281461026a5780633fc85b341461027d57600080fd5b80630465f072146101d457806305850844146101e95780630cd3058514610205575b600080fd5b6101e76101e23660046132da565b6104b0565b005b6101f260075481565b6040519081526020015b60405180910390f35b600254610218906001600160a01b031681565b6040516001600160a01b0390911681526020016101fc565b6101f27f000000000000000000000000000000000000000000000000000000000000000081565b6101e761026536600461332b565b61080b565b6101e7610278366004613348565b61096b565b600554610218906001600160a01b031681565b600354610218906001600160a01b031681565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101e7610d4e565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101f260065481565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101e761035e36600461332b565b610e6e565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101e761039836600461338a565b610f64565b6101e7611173565b6101e76103b33660046133b6565b6112c9565b600154610218906001600160a01b031681565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101e761042736600461332b565b6116df565b6101e761043a366004613435565b611da9565b60055461045390600160a01b900460ff1681565b60405190151581526020016101fc565b6101e7610471366004613490565b6122e0565b600454610218906001600160a01b031681565b6101e761049736600461332b565b612814565b60055461045390600160a81b900460ff1681565b600554600160a81b900460ff16156104fb5760405162461bcd60e51b815260206004820152600960248201526829b43aba103237bbb760b91b60448201526064015b60405180910390fd5b604051631cfde70160e21b8152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906373f79c0490602401602060405180830381865afa158015610563573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058791906134b2565b9050600083600281111561059d5761059d6134cb565b141561063657600554600160a01b900460ff166105fc5760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c79207374616b656420756e74696c206d6967726174696f6e000000000060448201526064016104f2565b6106316001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330876128ce565b6106bd565b600183600281111561064a5761064a6134cb565b1415610685576106316001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330876128ce565b6106ba6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330876128ce565b50825b600554600160a01b900460ff16156107a0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075191906134b2565b60075410156107915760405162461bcd60e51b815260206004820152600c60248201526b13d2135d8c481b5a5b9d195960a21b60448201526064016104f2565b61079b81836129e9565b610805565b6002546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906107d290339085906004016134e1565b600060405180830381600087803b1580156107ec57600080fd5b505af1158015610800573d6000803e3d6000fd5b505050505b50505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088291906134fa565b6001600160a01b0316336001600160a01b0316146000906108b65760405162461bcd60e51b81526004016104f29190613517565b506002546001600160a01b0316156108fe5760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b60448201526064016104f2565b6001600160a01b0381166109495760405162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a20674f484d60701b60448201526064016104f2565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e291906134fa565b6001600160a01b0316336001600160a01b031614600090610a165760405162461bcd60e51b81526004016104f29190613517565b506001600160a01b038316610a6d5760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e20616464726573732063616e6e6f7420626520307830000000000060448201526064016104f2565b6002546001600160a01b0384811691161415610ac35760405162461bcd60e51b815260206004820152601560248201527443616e6e6f742077697468647261773a20674f484d60581b60448201526064016104f2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415610b455760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f742077697468647261773a206f6c642d4f484d000000000000000060448201526064016104f2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415610bc75760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f742077697468647261773a206f6c642d734f484d0000000000000060448201526064016104f2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415610c495760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742077697468647261773a206f6c642d77734f484d00000000000060448201526064016104f2565b60008211610ca75760405162461bcd60e51b815260206004820152602560248201527f57697468647261772076616c7565206d75737420626520677265617465722074604482015264068616e20360dc1b60648201526084016104f2565b6001600160a01b038116610cb85750335b6040516370a0823160e01b815230600482015283906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2591906134b2565b905080841115610d33578093505b610d476001600160a01b0383168486612b26565b5050505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630505c8c96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc591906134fa565b6001600160a01b0316336001600160a01b031614600090610df95760405162461bcd60e51b81526004016104f29190613517565b50600554600160a01b900460ff1615610e4d5760405162461bcd60e51b8152602060048201526016602482015275135a59dc985d1a5bdb881a185cc81bd8d8dd5c9c995960521b60448201526064016104f2565b6005805460ff60a81b198116600160a81b9182900460ff1615909102179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee591906134fa565b6001600160a01b0316336001600160a01b031614600090610f195760405162461bcd60e51b81526004016104f29190613517565b50600180546001600160a01b0319166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600554600160a01b900460ff16610fde57600254604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac90610fa790339086906004016134e1565b600060405180830381600087803b158015610fc157600080fd5b505af1158015610fd5573d6000803e3d6000fd5b50505050610ff6565b600254610ff6906001600160a01b03163330856128ce565b60405163554c85a360e01b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063554c85a390602401602060405180830381865afa15801561105e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108291906134b2565b90506000826002811115611098576110986134cb565b14156110d7576110d26001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383612b26565b505050565b60018260028111156110eb576110eb6134cb565b1415611125576110d26001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383612b26565b6002826002811115611139576111396134cb565b14156110d2576110d26001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385612b26565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea91906134fa565b6001600160a01b0316336001600160a01b03161460009061121e5760405162461bcd60e51b81526004016104f29190613517565b506006541561125e5760405162461bcd60e51b815260206004820152600c60248201526b151a5b595b1bd8dac81cd95d60a21b60448201526064016104f2565b611288437f0000000000000000000000000000000000000000000000000000000000000000612c36565b60068190556040805143815260208101929092527f1f1c77590fcb154ccfac3f34adef3adfd45fa19cd5bd058297a1d6137d0229c0910160405180910390a1565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561131c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134091906134fa565b6001600160a01b0316336001600160a01b0316146000906113745760405162461bcd60e51b81526004016104f29190613517565b50600554600160a01b900460ff16156113c25760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481b5a59dc985d195960821b60448201526064016104f2565b6005805461ffff60a01b1916600160a01b1790556001600160a01b0385166114255760405162461bcd60e51b81526020600482015260166024820152755a65726f20616464726573733a20547265617375727960501b60448201526064016104f2565b600380546001600160a01b0319166001600160a01b0387811691909117909155841661148b5760405162461bcd60e51b81526020600482015260156024820152745a65726f20616464726573733a205374616b696e6760581b60448201526064016104f2565b600480546001600160a01b0319166001600160a01b038681169190911790915583166114ed5760405162461bcd60e51b81526020600482015260116024820152705a65726f20616464726573733a204f484d60781b60448201526064016104f2565b82600560006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611572573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159691906134b2565b600755600254604051631068361f60e01b81526001600160a01b038681166004830152848116602483015290911690631068361f90604401600060405180830381600087803b1580156115e857600080fd5b505af11580156115fc573d6000803e3d6000fd5b5050505061160b816001612c9e565b6116957f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639358928b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561166c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169091906134b2565b612f9f565b604080516001600160a01b038087168252871660208201527f844985ce6880ca51e25a6d4ecc8af37a5de880279f2081af96d0e875c42b7082910160405180910390a15050505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611732573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175691906134fa565b6001600160a01b0316336001600160a01b03161460009061178a5760405162461bcd60e51b81526004016104f29190613517565b50600554600160a01b900460ff166117e45760405162461bcd60e51b815260206004820152601760248201527f4d6967726174696f6e20686173206e6f7420626567756e00000000000000000060448201526064016104f2565b436006541080156117f6575060065415155b61183a5760405162461bcd60e51b815260206004820152601560248201527454696d656c6f636b206e6f7420636f6d706c65746560581b60448201526064016104f2565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063de0e9a3e9082906370a0823190602401602060405180830381865afa1580156118a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ca91906134b2565b6040518263ffffffff1660e01b81526004016118e891815260200190565b6020604051808303816000875af1158015611907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192b91906134b2565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611993573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b791906134b2565b60405163095ea7b360e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390611a28907f00000000000000000000000000000000000000000000000000000000000000009085906004016134e1565b6020604051808303816000875af1158015611a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6b91906135bf565b506040516327afaa2360e21b815260048101829052600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639ebea88c90604401600060405180830381600087803b158015611ad557600080fd5b505af1158015611ae9573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506370a0823190602401602060405180830381865afa158015611b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7891906134b2565b9050600754811115611b8e576000600755611ba6565b8060076000828254611ba091906135f2565b90915550505b6000611bb682633b9aca00613138565b60405163095ea7b360e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390611c27907f00000000000000000000000000000000000000000000000000000000000000009085906004016134e1565b6020604051808303816000875af1158015611c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6a91906135bf565b50604051627b8a6760e11b8152600481018290526001600160a01b0385811660248301527f0000000000000000000000000000000000000000000000000000000000000000169062f714ce90604401600060405180830381600087803b158015611cd357600080fd5b505af1158015611ce7573d6000803e3d6000fd5b50506003546040516370a0823160e01b8152306004820152611d7093506001600160a01b039182169250908716906370a0823190602401602060405180830381865afa158015611d3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5f91906134b2565b6001600160a01b0387169190612b26565b6040518281527faf5e14f4cc37b04db239269739bd935c4ed55328b691792af028e5570dfe61fa9060200160405180910390a150505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2091906134fa565b6001600160a01b0316336001600160a01b031614600090611e545760405162461bcd60e51b81526004016104f29190613517565b506040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600091908716906370a0823190602401602060405180830381865afa158015611ebf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee391906134b2565b60405162b0eee360e41b81529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630b0eee3090611f3390899085906004016134e1565b600060405180830381600087803b158015611f4d57600080fd5b505af1158015611f61573d6000803e3d6000fd5b5050505060007f0000000000000000000000000000000000000000000000000000000000000000905085611fb257507f00000000000000000000000000000000000000000000000000000000000000005b60405163095ea7b360e01b81526001600160a01b0388169063095ea7b390611fe090849086906004016134e1565b6020604051808303816000875af1158015611fff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202391906135bf565b50604051635d5155ef60e11b81526001600160a01b0386811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526044820184905260648201869052608482018590523060a48301524260c4830152600091829184169063baa2abde9060e40160408051808303816000875af11580156120b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120dd9190613609565b6003546040516340c10f1960e01b81529294509092506001600160a01b0316906340c10f199061211390309085906004016134e1565b600060405180830381600087803b15801561212d57600080fd5b505af1158015612141573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038a16925063095ea7b3915061217390869086906004016134e1565b6020604051808303816000875af1158015612192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b691906135bf565b5060055460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906121e990869085906004016134e1565b6020604051808303816000875af1158015612208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061222c91906135bf565b5060055460035460405162e8e33760e81b81526001600160a01b038a81166004830152928316602482015260448101859052606481018490526084810185905260a4810184905290821660c48201524260e48201529084169063e8e3370090610104016060604051808303816000875af11580156122ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d2919061362d565b505050505050505050505050565b600554600160a81b900460ff16156123265760405162461bcd60e51b815260206004820152600960248201526829b43aba103237bbb760b91b60448201526064016104f2565b6040516370a0823160e01b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561238f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b391906134b2565b6040516370a0823160e01b81523360048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561241d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244191906134b2565b6040516370a0823160e01b81523360048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156124ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124cf91906134b2565b1180156124e55750600554600160a01b900460ff165b156125a9576040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561254e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257291906134b2565b92506125a96001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330866128ce565b81156125e4576125e46001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330856128ce565b801561261f5761261f6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846128ce565b60006126c36001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166373f79c0461265d8787612c36565b6040518263ffffffff1660e01b815260040161267b91815260200190565b602060405180830381865afa158015612698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bc91906134b2565b8390612c36565b600554909150600160a01b900460ff16156127a9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275a91906134b2565b600754101561279a5760405162461bcd60e51b815260206004820152600c60248201526b13d2135d8c481b5a5b9d195960a21b60448201526064016104f2565b6127a481866129e9565b610d47565b6002546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906127db90339085906004016134e1565b600060405180830381600087803b1580156127f557600080fd5b505af1158015612809573d6000803e3d6000fd5b505050505050505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015612867573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288b91906134fa565b6001600160a01b0316336001600160a01b0316146000906128bf5760405162461bcd60e51b81526004016104f29190613517565b506128cb816000612c9e565b50565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691612932919061365b565b6000604051808303816000865af19150503d806000811461296f576040519150601f19603f3d011682016040523d82523d6000602084013e612974565b606091505b509150915081801561299e57508051158061299e57508080602001905181019061299e91906135bf565b6129e15760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016104f2565b505050505050565b60028160028111156129fd576129fd6134cb565b1415612a1e57600254612a1a906001600160a01b03163384612b26565b5050565b6001816002811115612a3257612a326134cb565b1415612aac57600480546040516339f4769360e01b81526001600160a01b03909116916339f4769391612a699133918791016134e1565b6020604051808303816000875af1158015612a88573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d291906134b2565b6000816002811115612ac057612ac06134cb565b1415612a1a576004805460405163990966d560e01b815233928101929092526024820184905260006044830181905260648301526001600160a01b03169063990966d5906084016020604051808303816000875af1158015612a88573d6000803e3d6000fd5b600080846001600160a01b031663a9059cbb60e01b8585604051602401612b4e9291906134e1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051612b8c919061365b565b6000604051808303816000865af19150503d8060008114612bc9576040519150601f19603f3d011682016040523d82523d6000602084013e612bce565b606091505b5091509150818015612bf8575080511580612bf8575080806020019051810190612bf891906135bf565b610d475760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016104f2565b600080612c438385613696565b905083811015612c955760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104f2565b90505b92915050565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600091908416906370a0823190602401602060405180830381865afa158015612d08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d2c91906134b2565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630c3513a86040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db291906134b2565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631eec5a9a86856040518363ffffffff1660e01b8152600401612e049291906134e1565b602060405180830381865afa158015612e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e4591906134b2565b905081811115612e62575080612e5f81633b9aca006136ae565b92505b60405162b0eee360e41b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630b0eee3090612eaf90889087906004016134e1565b600060405180830381600087803b158015612ec957600080fd5b505af1158015612edd573d6000803e3d6000fd5b505050508315612f8557600354612f01906001600160a01b038781169116856131b7565b60035460405163bc157ac160e01b8152600481018590526001600160a01b038781166024830152604482018490529091169063bc157ac1906064016020604051808303816000875af1158015612f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f7f91906134b2565b50610d47565b600354610d47906001600160a01b03878116911685612b26565b6003546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990612fd190309085906004016134e1565b600060405180830381600087803b158015612feb57600080fd5b505af1158015612fff573d6000803e3d6000fd5b50506005546004805460405163095ea7b360e01b81526001600160a01b03938416955063095ea7b3945061303993909116918691016134e1565b6020604051808303816000875af1158015613058573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061307c91906135bf565b5060048054604051631b0cd93b60e31b815230928101929092526024820183905260006044830152600160648301526001600160a01b03169063d866c9d8906084016020604051808303816000875af11580156130dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061310191906134b2565b506040518181527fc4c14883ae9fd8e26d5d59e3485ed29fd126d781d7e498a4ca5c54c8268e49369060200160405180910390a150565b60008261314757506000612c98565b600061315383856136ae565b90508261316085836136cd565b14612c955760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104f2565b600080846001600160a01b031663095ea7b360e01b85856040516024016131df9291906134e1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161321d919061365b565b6000604051808303816000865af19150503d806000811461325a576040519150601f19603f3d011682016040523d82523d6000602084013e61325f565b606091505b509150915081801561328957508051158061328957508080602001905181019061328991906135bf565b610d475760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064016104f2565b8035600381106132d557600080fd5b919050565b6000806000606084860312156132ef57600080fd5b833592506132ff602085016132c6565b915061330d604085016132c6565b90509250925092565b6001600160a01b03811681146128cb57600080fd5b60006020828403121561333d57600080fd5b8135612c9581613316565b60008060006060848603121561335d57600080fd5b833561336881613316565b925060208401359150604084013561337f81613316565b809150509250925092565b6000806040838503121561339d57600080fd5b823591506133ad602084016132c6565b90509250929050565b600080600080600060a086880312156133ce57600080fd5b85356133d981613316565b945060208601356133e981613316565b935060408601356133f981613316565b9250606086013561340981613316565b9150608086013561341981613316565b809150509295509295909350565b80151581146128cb57600080fd5b600080600080600060a0868803121561344d57600080fd5b853561345881613316565b9450602086013561346881613427565b9350604086013561347881613316565b94979396509394606081013594506080013592915050565b6000602082840312156134a257600080fd5b6134ab826132c6565b9392505050565b6000602082840312156134c457600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03929092168252602082015260400190565b60006020828403121561350c57600080fd5b8151612c9581613316565b600060208083526000845481600182811c91508083168061353957607f831692505b85831081141561355757634e487b7160e01b85526022600452602485fd5b8786018381526020018180156135745760018114613585576135b0565b60ff198616825287820196506135b0565b60008b81526020902060005b868110156135aa57815484820152908501908901613591565b83019750505b50949998505050505050505050565b6000602082840312156135d157600080fd5b8151612c9581613427565b634e487b7160e01b600052601160045260246000fd5b600082821015613604576136046135dc565b500390565b6000806040838503121561361c57600080fd5b505080516020909101519092909150565b60008060006060848603121561364257600080fd5b8351925060208401519150604084015190509250925092565b6000825160005b8181101561367c5760208186018101518583015201613662565b8181111561368b576000828501525b509190910192915050565b600082198211156136a9576136a96135dc565b500190565b60008160001904831182151516156136c8576136c86135dc565b500290565b6000826136ea57634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c634300080a000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637a9e5e4b11610104578063d5f42869116100a2578063ec78f90b11610071578063ec78f90b14610463578063ed44527b14610476578063f96a600614610489578063fc0e74d11461049c57600080fd5b8063d5f42869146103f2578063d6fa376014610419578063dfd9e6851461042c578063e7a1705c1461043f57600080fd5b8063b29c7444116100de578063b29c74441461039d578063b71a6df3146103a5578063bf7e214f146103b8578063cf0ef516146103cb57600080fd5b80637a9e5e4b14610350578063a0e47bf614610363578063abacbb2f1461038a57600080fd5b80634579b8b4116101715780635ed7ca5b1161014b5780635ed7ca5b146102f157806360ca094e146102f9578063694d6635146103205780636d13582c1461032957600080fd5b80634579b8b4146102905780634ed3b35f146102a35780634edf8980146102ca57600080fd5b8063219a1f81116101ad578063219a1f8114610230578063245c0e99146102575780633ccdbb281461026a5780633fc85b341461027d57600080fd5b80630465f072146101d457806305850844146101e95780630cd3058514610205575b600080fd5b6101e76101e23660046132da565b6104b0565b005b6101f260075481565b6040519081526020015b60405180910390f35b600254610218906001600160a01b031681565b6040516001600160a01b0390911681526020016101fc565b6101f27f000000000000000000000000000000000000000000000000000000000000000081565b6101e761026536600461332b565b61080b565b6101e7610278366004613348565b61096b565b600554610218906001600160a01b031681565b600354610218906001600160a01b031681565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101e7610d4e565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101f260065481565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101e761035e36600461332b565b610e6e565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101e761039836600461338a565b610f64565b6101e7611173565b6101e76103b33660046133b6565b6112c9565b600154610218906001600160a01b031681565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6102187f000000000000000000000000000000000000000000000000000000000000000081565b6101e761042736600461332b565b6116df565b6101e761043a366004613435565b611da9565b60055461045390600160a01b900460ff1681565b60405190151581526020016101fc565b6101e7610471366004613490565b6122e0565b600454610218906001600160a01b031681565b6101e761049736600461332b565b612814565b60055461045390600160a81b900460ff1681565b600554600160a81b900460ff16156104fb5760405162461bcd60e51b815260206004820152600960248201526829b43aba103237bbb760b91b60448201526064015b60405180910390fd5b604051631cfde70160e21b8152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906373f79c0490602401602060405180830381865afa158015610563573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058791906134b2565b9050600083600281111561059d5761059d6134cb565b141561063657600554600160a01b900460ff166105fc5760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c79207374616b656420756e74696c206d6967726174696f6e000000000060448201526064016104f2565b6106316001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330876128ce565b6106bd565b600183600281111561064a5761064a6134cb565b1415610685576106316001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330876128ce565b6106ba6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330876128ce565b50825b600554600160a01b900460ff16156107a0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075191906134b2565b60075410156107915760405162461bcd60e51b815260206004820152600c60248201526b13d2135d8c481b5a5b9d195960a21b60448201526064016104f2565b61079b81836129e9565b610805565b6002546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906107d290339085906004016134e1565b600060405180830381600087803b1580156107ec57600080fd5b505af1158015610800573d6000803e3d6000fd5b505050505b50505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088291906134fa565b6001600160a01b0316336001600160a01b0316146000906108b65760405162461bcd60e51b81526004016104f29190613517565b506002546001600160a01b0316156108fe5760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b60448201526064016104f2565b6001600160a01b0381166109495760405162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a20674f484d60701b60448201526064016104f2565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e291906134fa565b6001600160a01b0316336001600160a01b031614600090610a165760405162461bcd60e51b81526004016104f29190613517565b506001600160a01b038316610a6d5760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e20616464726573732063616e6e6f7420626520307830000000000060448201526064016104f2565b6002546001600160a01b0384811691161415610ac35760405162461bcd60e51b815260206004820152601560248201527443616e6e6f742077697468647261773a20674f484d60581b60448201526064016104f2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415610b455760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f742077697468647261773a206f6c642d4f484d000000000000000060448201526064016104f2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415610bc75760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f742077697468647261773a206f6c642d734f484d0000000000000060448201526064016104f2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415610c495760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742077697468647261773a206f6c642d77734f484d00000000000060448201526064016104f2565b60008211610ca75760405162461bcd60e51b815260206004820152602560248201527f57697468647261772076616c7565206d75737420626520677265617465722074604482015264068616e20360dc1b60648201526084016104f2565b6001600160a01b038116610cb85750335b6040516370a0823160e01b815230600482015283906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2591906134b2565b905080841115610d33578093505b610d476001600160a01b0383168486612b26565b5050505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630505c8c96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc591906134fa565b6001600160a01b0316336001600160a01b031614600090610df95760405162461bcd60e51b81526004016104f29190613517565b50600554600160a01b900460ff1615610e4d5760405162461bcd60e51b8152602060048201526016602482015275135a59dc985d1a5bdb881a185cc81bd8d8dd5c9c995960521b60448201526064016104f2565b6005805460ff60a81b198116600160a81b9182900460ff1615909102179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee591906134fa565b6001600160a01b0316336001600160a01b031614600090610f195760405162461bcd60e51b81526004016104f29190613517565b50600180546001600160a01b0319166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600554600160a01b900460ff16610fde57600254604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac90610fa790339086906004016134e1565b600060405180830381600087803b158015610fc157600080fd5b505af1158015610fd5573d6000803e3d6000fd5b50505050610ff6565b600254610ff6906001600160a01b03163330856128ce565b60405163554c85a360e01b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063554c85a390602401602060405180830381865afa15801561105e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108291906134b2565b90506000826002811115611098576110986134cb565b14156110d7576110d26001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383612b26565b505050565b60018260028111156110eb576110eb6134cb565b1415611125576110d26001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383612b26565b6002826002811115611139576111396134cb565b14156110d2576110d26001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385612b26565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea91906134fa565b6001600160a01b0316336001600160a01b03161460009061121e5760405162461bcd60e51b81526004016104f29190613517565b506006541561125e5760405162461bcd60e51b815260206004820152600c60248201526b151a5b595b1bd8dac81cd95d60a21b60448201526064016104f2565b611288437f0000000000000000000000000000000000000000000000000000000000000000612c36565b60068190556040805143815260208101929092527f1f1c77590fcb154ccfac3f34adef3adfd45fa19cd5bd058297a1d6137d0229c0910160405180910390a1565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561131c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134091906134fa565b6001600160a01b0316336001600160a01b0316146000906113745760405162461bcd60e51b81526004016104f29190613517565b50600554600160a01b900460ff16156113c25760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481b5a59dc985d195960821b60448201526064016104f2565b6005805461ffff60a01b1916600160a01b1790556001600160a01b0385166114255760405162461bcd60e51b81526020600482015260166024820152755a65726f20616464726573733a20547265617375727960501b60448201526064016104f2565b600380546001600160a01b0319166001600160a01b0387811691909117909155841661148b5760405162461bcd60e51b81526020600482015260156024820152745a65726f20616464726573733a205374616b696e6760581b60448201526064016104f2565b600480546001600160a01b0319166001600160a01b038681169190911790915583166114ed5760405162461bcd60e51b81526020600482015260116024820152705a65726f20616464726573733a204f484d60781b60448201526064016104f2565b82600560006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611572573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159691906134b2565b600755600254604051631068361f60e01b81526001600160a01b038681166004830152848116602483015290911690631068361f90604401600060405180830381600087803b1580156115e857600080fd5b505af11580156115fc573d6000803e3d6000fd5b5050505061160b816001612c9e565b6116957f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639358928b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561166c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169091906134b2565b612f9f565b604080516001600160a01b038087168252871660208201527f844985ce6880ca51e25a6d4ecc8af37a5de880279f2081af96d0e875c42b7082910160405180910390a15050505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611732573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175691906134fa565b6001600160a01b0316336001600160a01b03161460009061178a5760405162461bcd60e51b81526004016104f29190613517565b50600554600160a01b900460ff166117e45760405162461bcd60e51b815260206004820152601760248201527f4d6967726174696f6e20686173206e6f7420626567756e00000000000000000060448201526064016104f2565b436006541080156117f6575060065415155b61183a5760405162461bcd60e51b815260206004820152601560248201527454696d656c6f636b206e6f7420636f6d706c65746560581b60448201526064016104f2565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063de0e9a3e9082906370a0823190602401602060405180830381865afa1580156118a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ca91906134b2565b6040518263ffffffff1660e01b81526004016118e891815260200190565b6020604051808303816000875af1158015611907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192b91906134b2565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611993573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b791906134b2565b60405163095ea7b360e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390611a28907f00000000000000000000000000000000000000000000000000000000000000009085906004016134e1565b6020604051808303816000875af1158015611a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6b91906135bf565b506040516327afaa2360e21b815260048101829052600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639ebea88c90604401600060405180830381600087803b158015611ad557600080fd5b505af1158015611ae9573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506370a0823190602401602060405180830381865afa158015611b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7891906134b2565b9050600754811115611b8e576000600755611ba6565b8060076000828254611ba091906135f2565b90915550505b6000611bb682633b9aca00613138565b60405163095ea7b360e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390611c27907f00000000000000000000000000000000000000000000000000000000000000009085906004016134e1565b6020604051808303816000875af1158015611c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6a91906135bf565b50604051627b8a6760e11b8152600481018290526001600160a01b0385811660248301527f0000000000000000000000000000000000000000000000000000000000000000169062f714ce90604401600060405180830381600087803b158015611cd357600080fd5b505af1158015611ce7573d6000803e3d6000fd5b50506003546040516370a0823160e01b8152306004820152611d7093506001600160a01b039182169250908716906370a0823190602401602060405180830381865afa158015611d3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5f91906134b2565b6001600160a01b0387169190612b26565b6040518281527faf5e14f4cc37b04db239269739bd935c4ed55328b691792af028e5570dfe61fa9060200160405180910390a150505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2091906134fa565b6001600160a01b0316336001600160a01b031614600090611e545760405162461bcd60e51b81526004016104f29190613517565b506040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600091908716906370a0823190602401602060405180830381865afa158015611ebf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee391906134b2565b60405162b0eee360e41b81529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630b0eee3090611f3390899085906004016134e1565b600060405180830381600087803b158015611f4d57600080fd5b505af1158015611f61573d6000803e3d6000fd5b5050505060007f0000000000000000000000000000000000000000000000000000000000000000905085611fb257507f00000000000000000000000000000000000000000000000000000000000000005b60405163095ea7b360e01b81526001600160a01b0388169063095ea7b390611fe090849086906004016134e1565b6020604051808303816000875af1158015611fff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202391906135bf565b50604051635d5155ef60e11b81526001600160a01b0386811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526044820184905260648201869052608482018590523060a48301524260c4830152600091829184169063baa2abde9060e40160408051808303816000875af11580156120b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120dd9190613609565b6003546040516340c10f1960e01b81529294509092506001600160a01b0316906340c10f199061211390309085906004016134e1565b600060405180830381600087803b15801561212d57600080fd5b505af1158015612141573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038a16925063095ea7b3915061217390869086906004016134e1565b6020604051808303816000875af1158015612192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b691906135bf565b5060055460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906121e990869085906004016134e1565b6020604051808303816000875af1158015612208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061222c91906135bf565b5060055460035460405162e8e33760e81b81526001600160a01b038a81166004830152928316602482015260448101859052606481018490526084810185905260a4810184905290821660c48201524260e48201529084169063e8e3370090610104016060604051808303816000875af11580156122ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d2919061362d565b505050505050505050505050565b600554600160a81b900460ff16156123265760405162461bcd60e51b815260206004820152600960248201526829b43aba103237bbb760b91b60448201526064016104f2565b6040516370a0823160e01b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561238f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b391906134b2565b6040516370a0823160e01b81523360048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561241d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244191906134b2565b6040516370a0823160e01b81523360048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156124ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124cf91906134b2565b1180156124e55750600554600160a01b900460ff165b156125a9576040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561254e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257291906134b2565b92506125a96001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330866128ce565b81156125e4576125e46001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330856128ce565b801561261f5761261f6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846128ce565b60006126c36001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166373f79c0461265d8787612c36565b6040518263ffffffff1660e01b815260040161267b91815260200190565b602060405180830381865afa158015612698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bc91906134b2565b8390612c36565b600554909150600160a01b900460ff16156127a9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061275a91906134b2565b600754101561279a5760405162461bcd60e51b815260206004820152600c60248201526b13d2135d8c481b5a5b9d195960a21b60448201526064016104f2565b6127a481866129e9565b610d47565b6002546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906127db90339085906004016134e1565b600060405180830381600087803b1580156127f557600080fd5b505af1158015612809573d6000803e3d6000fd5b505050505050505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015612867573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288b91906134fa565b6001600160a01b0316336001600160a01b0316146000906128bf5760405162461bcd60e51b81526004016104f29190613517565b506128cb816000612c9e565b50565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691612932919061365b565b6000604051808303816000865af19150503d806000811461296f576040519150601f19603f3d011682016040523d82523d6000602084013e612974565b606091505b509150915081801561299e57508051158061299e57508080602001905181019061299e91906135bf565b6129e15760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016104f2565b505050505050565b60028160028111156129fd576129fd6134cb565b1415612a1e57600254612a1a906001600160a01b03163384612b26565b5050565b6001816002811115612a3257612a326134cb565b1415612aac57600480546040516339f4769360e01b81526001600160a01b03909116916339f4769391612a699133918791016134e1565b6020604051808303816000875af1158015612a88573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d291906134b2565b6000816002811115612ac057612ac06134cb565b1415612a1a576004805460405163990966d560e01b815233928101929092526024820184905260006044830181905260648301526001600160a01b03169063990966d5906084016020604051808303816000875af1158015612a88573d6000803e3d6000fd5b600080846001600160a01b031663a9059cbb60e01b8585604051602401612b4e9291906134e1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051612b8c919061365b565b6000604051808303816000865af19150503d8060008114612bc9576040519150601f19603f3d011682016040523d82523d6000602084013e612bce565b606091505b5091509150818015612bf8575080511580612bf8575080806020019051810190612bf891906135bf565b610d475760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016104f2565b600080612c438385613696565b905083811015612c955760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104f2565b90505b92915050565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600091908416906370a0823190602401602060405180830381865afa158015612d08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d2c91906134b2565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630c3513a86040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db291906134b2565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631eec5a9a86856040518363ffffffff1660e01b8152600401612e049291906134e1565b602060405180830381865afa158015612e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e4591906134b2565b905081811115612e62575080612e5f81633b9aca006136ae565b92505b60405162b0eee360e41b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630b0eee3090612eaf90889087906004016134e1565b600060405180830381600087803b158015612ec957600080fd5b505af1158015612edd573d6000803e3d6000fd5b505050508315612f8557600354612f01906001600160a01b038781169116856131b7565b60035460405163bc157ac160e01b8152600481018590526001600160a01b038781166024830152604482018490529091169063bc157ac1906064016020604051808303816000875af1158015612f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f7f91906134b2565b50610d47565b600354610d47906001600160a01b03878116911685612b26565b6003546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990612fd190309085906004016134e1565b600060405180830381600087803b158015612feb57600080fd5b505af1158015612fff573d6000803e3d6000fd5b50506005546004805460405163095ea7b360e01b81526001600160a01b03938416955063095ea7b3945061303993909116918691016134e1565b6020604051808303816000875af1158015613058573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061307c91906135bf565b5060048054604051631b0cd93b60e31b815230928101929092526024820183905260006044830152600160648301526001600160a01b03169063d866c9d8906084016020604051808303816000875af11580156130dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061310191906134b2565b506040518181527fc4c14883ae9fd8e26d5d59e3485ed29fd126d781d7e498a4ca5c54c8268e49369060200160405180910390a150565b60008261314757506000612c98565b600061315383856136ae565b90508261316085836136cd565b14612c955760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104f2565b600080846001600160a01b031663095ea7b360e01b85856040516024016131df9291906134e1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161321d919061365b565b6000604051808303816000865af19150503d806000811461325a576040519150601f19603f3d011682016040523d82523d6000602084013e61325f565b606091505b509150915081801561328957508051158061328957508080602001905181019061328991906135bf565b610d475760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064016104f2565b8035600381106132d557600080fd5b919050565b6000806000606084860312156132ef57600080fd5b833592506132ff602085016132c6565b915061330d604085016132c6565b90509250925092565b6001600160a01b03811681146128cb57600080fd5b60006020828403121561333d57600080fd5b8135612c9581613316565b60008060006060848603121561335d57600080fd5b833561336881613316565b925060208401359150604084013561337f81613316565b809150509250925092565b6000806040838503121561339d57600080fd5b823591506133ad602084016132c6565b90509250929050565b600080600080600060a086880312156133ce57600080fd5b85356133d981613316565b945060208601356133e981613316565b935060408601356133f981613316565b9250606086013561340981613316565b9150608086013561341981613316565b809150509295509295909350565b80151581146128cb57600080fd5b600080600080600060a0868803121561344d57600080fd5b853561345881613316565b9450602086013561346881613427565b9350604086013561347881613316565b94979396509394606081013594506080013592915050565b6000602082840312156134a257600080fd5b6134ab826132c6565b9392505050565b6000602082840312156134c457600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03929092168252602082015260400190565b60006020828403121561350c57600080fd5b8151612c9581613316565b600060208083526000845481600182811c91508083168061353957607f831692505b85831081141561355757634e487b7160e01b85526022600452602485fd5b8786018381526020018180156135745760018114613585576135b0565b60ff198616825287820196506135b0565b60008b81526020902060005b868110156135aa57815484820152908501908901613591565b83019750505b50949998505050505050505050565b6000602082840312156135d157600080fd5b8151612c9581613427565b634e487b7160e01b600052601160045260246000fd5b600082821015613604576136046135dc565b500390565b6000806040838503121561361c57600080fd5b505080516020909101519092909150565b60008060006060848603121561364257600080fd5b8351925060208401519150604084015190509250925092565b6000825160005b8181101561367c5760208186018101518583015201613662565b8181111561368b576000828501525b509190910192915050565b600082198211156136a9576136a96135dc565b500190565b60008160001904831182151516156136c8576136c86135dc565b500290565b6000826136ea57634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c634300080a000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "migrateLP(address,bool,address,uint256,uint256)": {
        "notice": "Migrate LP and pair with new OHM"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22230,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "UNAUTHORIZED",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 22233,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "authority",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IOlympusAuthority)13998"
      },
      {
        "astId": 17318,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "gOHM",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IgOHM)14567"
      },
      {
        "astId": 17321,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "newTreasury",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ITreasury)14187"
      },
      {
        "astId": 17324,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "newStaking",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IStaking)14104"
      },
      {
        "astId": 17327,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "newOHM",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)13767"
      },
      {
        "astId": 17329,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "ohmMigrated",
        "offset": 20,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 17331,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "shutdown",
        "offset": 21,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 17335,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "timelockEnd",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 17337,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "oldSupply",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)13767": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IOlympusAuthority)13998": {
        "encoding": "inplace",
        "label": "contract IOlympusAuthority",
        "numberOfBytes": "20"
      },
      "t_contract(IStaking)14104": {
        "encoding": "inplace",
        "label": "contract IStaking",
        "numberOfBytes": "20"
      },
      "t_contract(ITreasury)14187": {
        "encoding": "inplace",
        "label": "contract ITreasury",
        "numberOfBytes": "20"
      },
      "t_contract(IgOHM)14567": {
        "encoding": "inplace",
        "label": "contract IgOHM",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}