{
  "address": "0x09AC6Ad2Bac2eFa327113c81e5B2C29915f07EB6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ohm",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_staking",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_authority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IOlympusAuthority",
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRate",
          "type": "uint256"
        }
      ],
      "name": "addRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "adjustments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "add",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract IOlympusAuthority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bounty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "info",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "nextRewardAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "nextRewardFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "removeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveBounty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_add",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        }
      ],
      "name": "setAdjustment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IOlympusAuthority",
          "name": "_newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bounty",
          "type": "uint256"
        }
      ],
      "name": "setBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x54ce0de02ab4b60bd59c83000bece801dce2e409211a9ffd3f765098f02eeaad",
  "receipt": {
    "to": null,
    "from": "0xAE4bdBb0824C9B602589a5DaD2aD96C8A2AcC607",
    "contractAddress": "0x09AC6Ad2Bac2eFa327113c81e5B2C29915f07EB6",
    "transactionIndex": 0,
    "gasUsed": "1417244",
    "logsBloom": "0x
    "blockHash": "0x7c7e9873f8d011dbf41ea34cffd0337817b69976b5bee3a52895a0b1099406d7",
    "transactionHash": "0x54ce0de02ab4b60bd59c83000bece801dce2e409211a9ffd3f765098f02eeaad",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 30533445,
        "transactionHash": "0x54ce0de02ab4b60bd59c83000bece801dce2e409211a9ffd3f765098f02eeaad",
        "address": "0x09AC6Ad2Bac2eFa327113c81e5B2C29915f07EB6",
        "topics": [
          "0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad",
          "0x000000000000000000000000a359fff2d67c5f29c3f764f5ef23ad174a2a616a"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x7c7e9873f8d011dbf41ea34cffd0337817b69976b5bee3a52895a0b1099406d7"
      }
    ],
    "blockNumber": 30533445,
    "cumulativeGasUsed": "1417244",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc58525D2774a406eBCDcecE21202D28B77ff1B78",
    "0xc3593B4A74433A396Fe46eAEfD5F872AefcCE246",
    "0xfCc3582b6C240b2F8552cC8bd664998Cd88E8DDc",
    "0xa359FFF2D67c5F29c3f764f5EF23Ad174a2A616A"
  ],
  "solcInputHash": "c11c2ee64510471a09c1ebad4051e611",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ohm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IOlympusAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"addRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adjustments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bounty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"info\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"nextRewardAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"nextRewardFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"removeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveBounty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_add\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_target\",\"type\":\"uint256\"}],\"name\":\"setAdjustment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"setBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addRecipient(address,uint256)\":{\"params\":{\"_recipient\":\"address\",\"_rewardRate\":\"uint\"}},\"nextRewardAt(uint256)\":{\"params\":{\"_rate\":\"uint\"},\"returns\":{\"_0\":\"uint\"}},\"nextRewardFor(address)\":{\"params\":{\"_recipient\":\"address\"},\"returns\":{\"_0\":\"uint\"}},\"removeRecipient(uint256)\":{\"params\":{\"_index\":\"uint\"}},\"setAdjustment(uint256,bool,uint256,uint256)\":{\"params\":{\"_add\":\"bool\",\"_index\":\"uint\",\"_rate\":\"uint\",\"_target\":\"uint\"}},\"setBounty(uint256)\":{\"params\":{\"_bounty\":\"uint256\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addRecipient(address,uint256)\":{\"notice\":\"adds recipient for distributions\"},\"distribute()\":{\"notice\":\"send epoch reward to staking contract\"},\"nextRewardAt(uint256)\":{\"notice\":\"view function for next reward at given rate\"},\"nextRewardFor(address)\":{\"notice\":\"view function for next reward for specified address\"},\"removeRecipient(uint256)\":{\"notice\":\"removes recipient for distributions\"},\"setAdjustment(uint256,bool,uint256,uint256)\":{\"notice\":\"set adjustment info for a collector's reward rate\"},\"setBounty(uint256)\":{\"notice\":\"set bounty to incentivize keepers\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingDistributor.sol\":\"Distributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\nimport \\\"./libraries/SafeERC20.sol\\\";\\nimport \\\"./libraries/SafeMath.sol\\\";\\n\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/ITreasury.sol\\\";\\nimport \\\"./interfaces/IDistributor.sol\\\";\\n\\nimport \\\"./types/OlympusAccessControlled.sol\\\";\\n\\ncontract Distributor is IDistributor, OlympusAccessControlled {\\n    /* ========== DEPENDENCIES ========== */\\n\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    /* ====== VARIABLES ====== */\\n\\n    IERC20 private immutable ohm;\\n    ITreasury private immutable treasury;\\n    address private immutable staking;\\n\\n    mapping(uint256 => Adjust) public adjustments;\\n    uint256 public override bounty;\\n\\n    uint256 private immutable rateDenominator = 1_000_000;\\n\\n    /* ====== STRUCTS ====== */\\n\\n    struct Info {\\n        uint256 rate; // in ten-thousandths ( 5000 = 0.5% )\\n        address recipient;\\n    }\\n    Info[] public info;\\n\\n    struct Adjust {\\n        bool add;\\n        uint256 rate;\\n        uint256 target;\\n    }\\n\\n    /* ====== CONSTRUCTOR ====== */\\n\\n    constructor(\\n        address _treasury,\\n        address _ohm,\\n        address _staking,\\n        address _authority\\n    ) OlympusAccessControlled(IOlympusAuthority(_authority)) {\\n        require(_treasury != address(0), \\\"Zero address: Treasury\\\");\\n        treasury = ITreasury(_treasury);\\n        require(_ohm != address(0), \\\"Zero address: OHM\\\");\\n        ohm = IERC20(_ohm);\\n        require(_staking != address(0), \\\"Zero address: Staking\\\");\\n        staking = _staking;\\n    }\\n\\n    /* ====== PUBLIC FUNCTIONS ====== */\\n\\n    /**\\n        @notice send epoch reward to staking contract\\n     */\\n    function distribute() external override {\\n        require(msg.sender == staking, \\\"Only staking\\\");\\n        // distribute rewards to each recipient\\n        for (uint256 i = 0; i < info.length; i++) {\\n            if (info[i].rate > 0) {\\n                treasury.mint(info[i].recipient, nextRewardAt(info[i].rate)); // mint and send tokens\\n                adjust(i); // check for adjustment\\n            }\\n        }\\n    }\\n\\n    function retrieveBounty() external override returns (uint256) {\\n        require(msg.sender == staking, \\\"Only staking\\\");\\n        // If the distributor bounty is > 0, mint it for the staking contract.\\n        if (bounty > 0) {\\n            treasury.mint(address(staking), bounty);\\n        }\\n\\n        return bounty;\\n    }\\n\\n    /* ====== INTERNAL FUNCTIONS ====== */\\n\\n    /**\\n        @notice increment reward rate for collector\\n     */\\n    function adjust(uint256 _index) internal {\\n        Adjust memory adjustment = adjustments[_index];\\n        if (adjustment.rate != 0) {\\n            if (adjustment.add) {\\n                // if rate should increase\\n                info[_index].rate = info[_index].rate.add(adjustment.rate); // raise rate\\n                if (info[_index].rate >= adjustment.target) {\\n                    // if target met\\n                    adjustments[_index].rate = 0; // turn off adjustment\\n                    info[_index].rate = adjustment.target; // set to target\\n                }\\n            } else {\\n                // if rate should decrease\\n                if (info[_index].rate > adjustment.rate) {\\n                    // protect from underflow\\n                    info[_index].rate = info[_index].rate.sub(adjustment.rate); // lower rate\\n                } else {\\n                    info[_index].rate = 0;\\n                }\\n\\n                if (info[_index].rate <= adjustment.target) {\\n                    // if target met\\n                    adjustments[_index].rate = 0; // turn off adjustment\\n                    info[_index].rate = adjustment.target; // set to target\\n                }\\n            }\\n        }\\n    }\\n\\n    /* ====== VIEW FUNCTIONS ====== */\\n\\n    /**\\n        @notice view function for next reward at given rate\\n        @param _rate uint\\n        @return uint\\n     */\\n    function nextRewardAt(uint256 _rate) public view override returns (uint256) {\\n        return ohm.totalSupply().mul(_rate).div(rateDenominator);\\n    }\\n\\n    /**\\n        @notice view function for next reward for specified address\\n        @param _recipient address\\n        @return uint\\n     */\\n    function nextRewardFor(address _recipient) public view override returns (uint256) {\\n        uint256 reward;\\n        for (uint256 i = 0; i < info.length; i++) {\\n            if (info[i].recipient == _recipient) {\\n                reward = reward.add(nextRewardAt(info[i].rate));\\n            }\\n        }\\n        return reward;\\n    }\\n\\n    /* ====== POLICY FUNCTIONS ====== */\\n\\n    /**\\n     * @notice set bounty to incentivize keepers\\n     * @param _bounty uint256\\n     */\\n    function setBounty(uint256 _bounty) external override onlyGovernor {\\n        require(_bounty <= 2e9, \\\"Too much\\\");\\n        bounty = _bounty;\\n    }\\n\\n    /**\\n        @notice adds recipient for distributions\\n        @param _recipient address\\n        @param _rewardRate uint\\n     */\\n    //\\u76ee\\u524d\\u53ea\\u6709add staking\\u5408\\u7ea6\\n    function addRecipient(address _recipient, uint256 _rewardRate) external override onlyGovernor {\\n        require(_recipient != address(0), \\\"Zero address: Recipient\\\");\\n        require(_rewardRate <= rateDenominator, \\\"Rate cannot exceed denominator\\\");\\n        info.push(Info({recipient: _recipient, rate: _rewardRate}));\\n    }\\n\\n    /**\\n        @notice removes recipient for distributions\\n        @param _index uint\\n     */\\n    function removeRecipient(uint256 _index) external override {\\n        require(\\n            msg.sender == authority.governor() || msg.sender == authority.guardian(),\\n            \\\"Caller is not governor or guardian\\\"\\n        );\\n        require(info[_index].recipient != address(0), \\\"Recipient does not exist\\\");\\n        info[_index].recipient = address(0);\\n        info[_index].rate = 0;\\n    }\\n\\n    /**\\n        @notice set adjustment info for a collector's reward rate\\n        @param _index uint\\n        @param _add bool\\n        @param _rate uint\\n        @param _target uint\\n     */\\n    function setAdjustment(\\n        uint256 _index,\\n        bool _add,\\n        uint256 _rate,\\n        uint256 _target\\n    ) external override {\\n        require(\\n            msg.sender == authority.governor() || msg.sender == authority.guardian(),\\n            \\\"Caller is not governor or guardian\\\"\\n        );\\n        require(info[_index].recipient != address(0), \\\"Recipient does not exist\\\");\\n\\n        if (msg.sender == authority.guardian()) {\\n            require(_rate <= info[_index].rate.mul(25).div(1000), \\\"Limiter: cannot adjust by >2.5%\\\");\\n        }\\n\\n        if (!_add) {\\n            require(_rate <= info[_index].rate, \\\"Cannot decrease rate by more than it already is\\\");\\n        }\\n\\n        adjustments[_index] = Adjust({add: _add, rate: _rate, target: _target});\\n    }\\n}\\n\",\"keccak256\":\"0xc756b6ae3e23c92293ce3bf7b1e88985231afcd810ef6b4c8679a95b52c9c531\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IDistributor {\\n    function distribute() external;\\n\\n    function bounty() external view returns (uint256);\\n\\n    function retrieveBounty() external returns (uint256);\\n\\n    function nextRewardAt(uint256 _rate) external view returns (uint256);\\n\\n    function nextRewardFor(address _recipient) external view returns (uint256);\\n\\n    function setBounty(uint256 _bounty) external;\\n\\n    function addRecipient(address _recipient, uint256 _rewardRate) external;\\n\\n    function removeRecipient(uint256 _index) external;\\n\\n    function setAdjustment(\\n        uint256 _index,\\n        bool _add,\\n        uint256 _rate,\\n        uint256 _target\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa66c04c0eec466b9cf811efe468fc52f00bfd7579b5d881f2617b003a9c596f6\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5e7c863b5ab16bc16a88ab5ce889edd21e9f834d3bcb6817818e8f3f16726694\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IOlympusAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IOlympusAuthority {\\n    /* ========== EVENTS ========== */\\n\\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n\\n    event GovernorPulled(address indexed from, address indexed to);\\n    event GuardianPulled(address indexed from, address indexed to);\\n    event PolicyPulled(address indexed from, address indexed to);\\n    event VaultPulled(address indexed from, address indexed to);\\n\\n    /* ========== VIEW ========== */\\n\\n    function governor() external view returns (address);\\n\\n    function guardian() external view returns (address);\\n\\n    function policy() external view returns (address);\\n\\n    function vault() external view returns (address);\\n\\n    function addMinter(address) external;\\n\\n    function subMinter(address) external;\\n\\n    function minters(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x3e87025bb1b05ff13cca8157bb628dd73f2b6672b9db02e3f3d66b87df12cfce\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface ITreasury {\\n    function deposit(\\n        uint256 _amount,\\n        address _token,\\n        uint256 _profit\\n    ) external returns (uint256);\\n\\n    function withdraw(uint256 _amount, address _token) external;\\n\\n    function tokenValue(address _token, uint256 _amount) external view returns (uint256 value_);\\n\\n    function mint(address _recipient, uint256 _amount) external;\\n\\n    function manage(address _token, uint256 _amount) external;\\n\\n    function incurDebt(uint256 amount_, address token_) external;\\n\\n    function repayDebtWithReserve(uint256 amount_, address token_) external;\\n\\n    function excessReserves() external view returns (uint256);\\n\\n    function baseSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x6f4e16b5c162d5a2fbd40e764ca3b5cdf6e903409c021fce1982f4439de68fcb\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\nimport {IERC20} from \\\"../interfaces/IERC20.sol\\\";\\n\\n/// @notice Safe IERC20 and ETH transfer library that safely handles missing return values.\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\\n/// Taken from Solmate\\nlibrary SafeERC20 {\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transfer.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.approve.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        (bool success, ) = to.call{value: amount}(new bytes(0));\\n\\n        require(success, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x060047addcb2f9e0c536d6bea7dd50384b02c08acab2c5b761067544b3a8a0db\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\\nlibrary SafeMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        assert(a == b * c + (a % b)); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    // Only used in the  BondingCalculator.sol\\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\\n        if (a > 3) {\\n            c = a;\\n            uint256 b = add(div(a, 2), 1);\\n            while (b < c) {\\n                c = b;\\n                b = div(add(div(a, b), b), 2);\\n            }\\n        } else if (a != 0) {\\n            c = 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x521bd2b4dea1c478051130fd4753d1f22ba6d59819d4df95b8b5ed75f04d1291\",\"license\":\"AGPL-3.0\"},\"contracts/types/OlympusAccessControlled.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"../interfaces/IOlympusAuthority.sol\\\";\\n\\nabstract contract OlympusAccessControlled {\\n    /* ========== EVENTS ========== */\\n\\n    event AuthorityUpdated(IOlympusAuthority indexed authority);\\n\\n    string UNAUTHORIZED = \\\"UNAUTHORIZED\\\"; // save gas\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IOlympusAuthority public authority;\\n\\n    /* ========== Constructor ========== */\\n\\n    constructor(IOlympusAuthority _authority) {\\n        authority = _authority;\\n        emit AuthorityUpdated(_authority);\\n    }\\n\\n    /* ========== MODIFIERS ========== */\\n\\n    modifier onlyGovernor() {\\n        require(msg.sender == authority.governor(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyGuardian() {\\n        require(msg.sender == authority.guardian(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyPolicy() {\\n        require(msg.sender == authority.policy(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyVault() {\\n        require(authority.minters(msg.sender), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    /* ========== GOV ONLY ========== */\\n\\n    function setAuthority(IOlympusAuthority _newAuthority) external onlyGovernor {\\n        authority = _newAuthority;\\n        emit AuthorityUpdated(_newAuthority);\\n    }\\n}\\n\",\"keccak256\":\"0x8bf1acb3746665ec63dfef67e8c6c81eae52f2252e227f78e7463fb15f533c76\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addRecipient(address,uint256)": {
        "params": {
          "_recipient": "address",
          "_rewardRate": "uint"
        }
      },
      "nextRewardAt(uint256)": {
        "params": {
          "_rate": "uint"
        },
        "returns": {
          "_0": "uint"
        }
      },
      "nextRewardFor(address)": {
        "params": {
          "_recipient": "address"
        },
        "returns": {
          "_0": "uint"
        }
      },
      "removeRecipient(uint256)": {
        "params": {
          "_index": "uint"
        }
      },
      "setAdjustment(uint256,bool,uint256,uint256)": {
        "params": {
          "_add": "bool",
          "_index": "uint",
          "_rate": "uint",
          "_target": "uint"
        }
      },
      "setBounty(uint256)": {
        "params": {
          "_bounty": "uint256"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addRecipient(address,uint256)": {
        "notice": "adds recipient for distributions"
      },
      "distribute()": {
        "notice": "send epoch reward to staking contract"
      },
      "nextRewardAt(uint256)": {
        "notice": "view function for next reward at given rate"
      },
      "nextRewardFor(address)": {
        "notice": "view function for next reward for specified address"
      },
      "removeRecipient(uint256)": {
        "notice": "removes recipient for distributions"
      },
      "setAdjustment(uint256,bool,uint256,uint256)": {
        "notice": "set adjustment info for a collector's reward rate"
      },
      "setBounty(uint256)": {
        "notice": "set bounty to incentivize keepers"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23622,
        "contract": "contracts/StakingDistributor.sol:Distributor",
        "label": "UNAUTHORIZED",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 23625,
        "contract": "contracts/StakingDistributor.sol:Distributor",
        "label": "authority",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IOlympusAuthority)15018"
      },
      {
        "astId": 5856,
        "contract": "contracts/StakingDistributor.sol:Distributor",
        "label": "adjustments",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Adjust)5878_storage)"
      },
      {
        "astId": 5859,
        "contract": "contracts/StakingDistributor.sol:Distributor",
        "label": "bounty",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 5871,
        "contract": "contracts/StakingDistributor.sol:Distributor",
        "label": "info",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(Info)5867_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Info)5867_storage)dyn_storage": {
        "base": "t_struct(Info)5867_storage",
        "encoding": "dynamic_array",
        "label": "struct Distributor.Info[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IOlympusAuthority)15018": {
        "encoding": "inplace",
        "label": "contract IOlympusAuthority",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Adjust)5878_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Distributor.Adjust)",
        "numberOfBytes": "32",
        "value": "t_struct(Adjust)5878_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Adjust)5878_storage": {
        "encoding": "inplace",
        "label": "struct Distributor.Adjust",
        "members": [
          {
            "astId": 5873,
            "contract": "contracts/StakingDistributor.sol:Distributor",
            "label": "add",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 5875,
            "contract": "contracts/StakingDistributor.sol:Distributor",
            "label": "rate",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5877,
            "contract": "contracts/StakingDistributor.sol:Distributor",
            "label": "target",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Info)5867_storage": {
        "encoding": "inplace",
        "label": "struct Distributor.Info",
        "members": [
          {
            "astId": 5864,
            "contract": "contracts/StakingDistributor.sol:Distributor",
            "label": "rate",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5866,
            "contract": "contracts/StakingDistributor.sol:Distributor",
            "label": "recipient",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}