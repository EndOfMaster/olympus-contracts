{
  "address": "0x95F95646DEeb0BFe788DFdA41F6949007632A2B6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ohm",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timelock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_authority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IOlympusAuthority",
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "debtor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "CreateDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Managed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum OlympusTreasury.STATUS",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "queued",
          "type": "address"
        }
      ],
      "name": "PermissionQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum OlympusTreasury.STATUS",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "Permissioned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "debtor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RepayDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesAudited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OHM",
      "outputs": [
        {
          "internalType": "contract IOHM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auditReserves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract IOlympusAuthority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksNeededForQueue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bondCalculator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "debtLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_profit",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "send_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OlympusTreasury.STATUS",
          "name": "_status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_toDisable",
          "type": "address"
        }
      ],
      "name": "disable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OlympusTreasury.STATUS",
          "name": "_status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_calculator",
          "type": "address"
        }
      ],
      "name": "enable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excessReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "incurDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "enum OlympusTreasury.STATUS",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "indexInRegistry",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "manage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "nullify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ohmDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onChainGovernanceTimelock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "permissionQueue",
      "outputs": [
        {
          "internalType": "enum OlympusTreasury.STATUS",
          "name": "managing",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "toPermit",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "calculator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timelockEnd",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "nullify",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OlympusTreasury.STATUS",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "permissions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OlympusTreasury.STATUS",
          "name": "_status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_calculator",
          "type": "address"
        }
      ],
      "name": "queueTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OlympusTreasury.STATUS",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "repayDebtWithOHM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "repayDebtWithReserve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sOHM",
      "outputs": [
        {
          "internalType": "contract IsOHM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IOlympusAuthority",
          "name": "_newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "setDebtLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "tokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdc639b7fa14df9c3750bf75120d06894214fc2df86b1ef4a0ba394e08610e718",
  "receipt": {
    "to": null,
    "from": "0xAE4bdBb0824C9B602589a5DaD2aD96C8A2AcC607",
    "contractAddress": "0x95F95646DEeb0BFe788DFdA41F6949007632A2B6",
    "transactionIndex": 4,
    "gasUsed": "3326879",
    "logsBloom": "0x
    "blockHash": "0xd5273a7f300f6ffdcb2991c00f9ed6e40535716c248117195f747d7777867e7f",
    "transactionHash": "0xdc639b7fa14df9c3750bf75120d06894214fc2df86b1ef4a0ba394e08610e718",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 30533976,
        "transactionHash": "0xdc639b7fa14df9c3750bf75120d06894214fc2df86b1ef4a0ba394e08610e718",
        "address": "0x95F95646DEeb0BFe788DFdA41F6949007632A2B6",
        "topics": [
          "0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad",
          "0x000000000000000000000000a362a7871defb74c9c0126669423fc85f4d2b598"
        ],
        "data": "0x",
        "logIndex": 13,
        "blockHash": "0xd5273a7f300f6ffdcb2991c00f9ed6e40535716c248117195f747d7777867e7f"
      }
    ],
    "blockNumber": 30533976,
    "cumulativeGasUsed": "3744814",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb08317EE1d9Deba089A6A4176C89ea1967491494",
    0,
    "0xA362a7871dEFb74C9C0126669423fc85F4D2b598"
  ],
  "solcInputHash": "c11c2ee64510471a09c1ebad4051e611",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ohm\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IOlympusAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CreateDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Managed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum OlympusTreasury.STATUS\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"queued\",\"type\":\"address\"}],\"name\":\"PermissionQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum OlympusTreasury.STATUS\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"Permissioned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RepayDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesAudited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OHM\",\"outputs\":[{\"internalType\":\"contract IOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auditReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksNeededForQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bondCalculator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debtLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_profit\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"send_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OlympusTreasury.STATUS\",\"name\":\"_status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_toDisable\",\"type\":\"address\"}],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OlympusTreasury.STATUS\",\"name\":\"_status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_calculator\",\"type\":\"address\"}],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excessReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"incurDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"enum OlympusTreasury.STATUS\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"indexInRegistry\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"manage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"nullify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ohmDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onChainGovernanceTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"permissionQueue\",\"outputs\":[{\"internalType\":\"enum OlympusTreasury.STATUS\",\"name\":\"managing\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"toPermit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"calculator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelockEnd\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"nullify\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OlympusTreasury.STATUS\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"permissions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OlympusTreasury.STATUS\",\"name\":\"_status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_calculator\",\"type\":\"address\"}],\"name\":\"queueTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OlympusTreasury.STATUS\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayDebtWithOHM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"repayDebtWithReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sOHM\",\"outputs\":[{\"internalType\":\"contract IsOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"setDebtLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokenValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"baseSupply()\":{\"details\":\"use this any time you need to query supply\",\"returns\":{\"_0\":\"uint256\"}},\"deposit(uint256,address,uint256)\":{\"params\":{\"_amount\":\"uint256\",\"_profit\":\"uint256\",\"_token\":\"address\"},\"returns\":{\"send_\":\"uint256\"}},\"disable(uint8,address)\":{\"params\":{\"_status\":\"STATUS\",\"_toDisable\":\"address\"}},\"enable(uint8,address,address)\":{\"params\":{\"_address\":\"address\",\"_calculator\":\"address\",\"_status\":\"STATUS\"}},\"excessReserves()\":{\"returns\":{\"_0\":\"uint\"}},\"execute(uint256)\":{\"params\":{\"_index\":\"uint256\"}},\"incurDebt(uint256,address)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"}},\"indexInRegistry(address,uint8)\":{\"returns\":{\"_0\":\"(bool, uint256)\"}},\"manage(address,uint256)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"}},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"uint256\",\"_recipient\":\"address\"}},\"nullify(uint256)\":{\"params\":{\"_index\":\"uint256\"}},\"queueTimelock(uint8,address,address)\":{\"params\":{\"_address\":\"address\",\"_calculator\":\"address\",\"_status\":\"STATUS\"}},\"repayDebtWithOHM(uint256)\":{\"params\":{\"_amount\":\"uint256\"}},\"repayDebtWithReserve(uint256,address)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"}},\"setDebtLimit(address,uint256)\":{\"params\":{\"_address\":\"address\",\"_limit\":\"uint256\"}},\"tokenValue(address,uint256)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"},\"returns\":{\"value_\":\"uint256\"}},\"withdraw(uint256,address)\":{\"params\":{\"_amount\":\"uint256\",\"_token\":\"address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"auditReserves()\":{\"notice\":\"takes inventory of all tracked assetsalways consolidate to recognized reserves before audit\"},\"baseSupply()\":{\"notice\":\"returns supply metric that cannot be manipulated by debt\"},\"deposit(uint256,address,uint256)\":{\"notice\":\"allow approved address to deposit an asset for OHM\"},\"disable(uint8,address)\":{\"notice\":\"disable permission from address\"},\"disableTimelock()\":{\"notice\":\"disables timelocked functions\"},\"enable(uint8,address,address)\":{\"notice\":\"enable permission from queue\"},\"excessReserves()\":{\"notice\":\"returns excess reserves not backing tokens\"},\"execute(uint256)\":{\"notice\":\"enable queued permission\"},\"incurDebt(uint256,address)\":{\"notice\":\"allow approved address to borrow reserves\"},\"indexInRegistry(address,uint8)\":{\"notice\":\"check if registry contains address\"},\"initialize()\":{\"notice\":\"enables timelocks after initilization\"},\"manage(address,uint256)\":{\"notice\":\"allow approved address to withdraw assets\"},\"mint(address,uint256)\":{\"notice\":\"mint new OHM using excess reserves\"},\"nullify(uint256)\":{\"notice\":\"cancel timelocked action\"},\"queueTimelock(uint8,address,address)\":{\"notice\":\"queue address to receive permission\"},\"repayDebtWithOHM(uint256)\":{\"notice\":\"allow approved address to repay borrowed reserves with OHM\"},\"repayDebtWithReserve(uint256,address)\":{\"notice\":\"allow approved address to repay borrowed reserves with reserves\"},\"setDebtLimit(address,uint256)\":{\"notice\":\"set max debt for address\"},\"tokenValue(address,uint256)\":{\"notice\":\"returns OHM valuation of asset\"},\"withdraw(uint256,address)\":{\"notice\":\"allow approved address to burn OHM for reserves\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"OlympusTreasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\nimport \\\"./libraries/SafeMath.sol\\\";\\nimport \\\"./libraries/SafeERC20.sol\\\";\\n\\nimport \\\"./interfaces/IOwnable.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/IERC20Metadata.sol\\\";\\nimport \\\"./interfaces/IOHM.sol\\\";\\nimport \\\"./interfaces/IsOHM.sol\\\";\\nimport \\\"./interfaces/IBondingCalculator.sol\\\";\\nimport \\\"./interfaces/ITreasury.sol\\\";\\n\\nimport \\\"./types/OlympusAccessControlled.sol\\\";\\n\\ncontract OlympusTreasury is OlympusAccessControlled, ITreasury {\\n    /* ========== DEPENDENCIES ========== */\\n\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    /* ========== EVENTS ========== */\\n\\n    event Deposit(address indexed token, uint256 amount, uint256 value);\\n    event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n    event CreateDebt(address indexed debtor, address indexed token, uint256 amount, uint256 value);\\n    event RepayDebt(address indexed debtor, address indexed token, uint256 amount, uint256 value);\\n    event Managed(address indexed token, uint256 amount);\\n    event ReservesAudited(uint256 indexed totalReserves);\\n    event Minted(address indexed caller, address indexed recipient, uint256 amount);\\n    event PermissionQueued(STATUS indexed status, address queued);\\n    event Permissioned(address addr, STATUS indexed status, bool result);\\n\\n    /* ========== DATA STRUCTURES ========== */\\n\\n    enum STATUS {\\n        RESERVEDEPOSITOR,\\n        RESERVESPENDER,\\n        RESERVETOKEN,\\n        RESERVEMANAGER,\\n        LIQUIDITYDEPOSITOR,\\n        LIQUIDITYTOKEN,\\n        LIQUIDITYMANAGER,\\n        RESERVEDEBTOR,\\n        REWARDMANAGER,\\n        SOHM,\\n        OHMDEBTOR\\n    }\\n\\n    struct Queue {\\n        STATUS managing;\\n        address toPermit;\\n        address calculator;\\n        uint256 timelockEnd;\\n        bool nullify;\\n        bool executed;\\n    }\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IOHM public immutable OHM;\\n    IsOHM public sOHM;\\n\\n    mapping(STATUS => address[]) public registry;\\n    mapping(STATUS => mapping(address => bool)) public permissions;\\n    mapping(address => address) public bondCalculator;\\n\\n    mapping(address => uint256) public debtLimit;\\n\\n    uint256 public totalReserves;\\n    uint256 public totalDebt;\\n    uint256 public ohmDebt;\\n\\n    Queue[] public permissionQueue;\\n    uint256 public immutable blocksNeededForQueue;\\n\\n    bool public timelockEnabled;\\n    bool public initialized;\\n\\n    uint256 public onChainGovernanceTimelock;\\n\\n    string internal notAccepted = \\\"Treasury: not accepted\\\";\\n    string internal notApproved = \\\"Treasury: not approved\\\";\\n    string internal invalidToken = \\\"Treasury: invalid token\\\";\\n    string internal insufficientReserves = \\\"Treasury: insufficient reserves\\\";\\n\\n    /* ========== CONSTRUCTOR ========== */\\n\\n    constructor(\\n        address _ohm,\\n        uint256 _timelock,\\n        address _authority\\n    ) OlympusAccessControlled(IOlympusAuthority(_authority)) {\\n        require(_ohm != address(0), \\\"Zero address: OHM\\\");\\n        OHM = IOHM(_ohm);\\n\\n        timelockEnabled = false;\\n        initialized = false;\\n        blocksNeededForQueue = _timelock;\\n    }\\n\\n    /* ========== MUTATIVE FUNCTIONS ========== */\\n\\n    /**\\n     * @notice allow approved address to deposit an asset for OHM\\n     * @param _amount uint256\\n     * @param _token address\\n     * @param _profit uint256\\n     * @return send_ uint256\\n     */\\n    function deposit(\\n        uint256 _amount,\\n        address _token,\\n        uint256 _profit\\n    ) external override returns (uint256 send_) {\\n        //\\u9a8c\\u8bc1\\u6743\\u9650\\n        if (permissions[STATUS.RESERVETOKEN][_token]) {\\n            require(permissions[STATUS.RESERVEDEPOSITOR][msg.sender], notApproved);\\n        } else if (permissions[STATUS.LIQUIDITYTOKEN][_token]) {\\n            require(permissions[STATUS.LIQUIDITYDEPOSITOR][msg.sender], notApproved);\\n        } else {\\n            revert(invalidToken);\\n        }\\n\\n        //\\u4ee3\\u5e01\\u8f6c\\u8fdb\\u6765\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n        //\\u7b97\\u6cd5\\u5206\\u522b\\u8ba1\\u7b97\\u666e\\u901atoken\\u548clp token\\u7684value\\n        uint256 value = tokenValue(_token, _amount);\\n        // mint OHM needed and store amount of rewards for distribution\\n        //mint ohm \\u4f46\\u662f\\u4f1a\\u5206\\u4e00\\u90e8\\u5206_profit\\u7559\\u5728\\u8fd9\\u91cc\\uff0c\\u5269\\u4e0b\\u7684\\u7ed9\\u5230\\u8c03\\u7528\\u8005\\n        send_ = value.sub(_profit);\\n        OHM.mint(msg.sender, send_);\\n\\n        totalReserves = totalReserves.add(value);\\n\\n        emit Deposit(_token, _amount, value);\\n    }\\n\\n    //TODO \\u9884\\u4f30\\u662f\\u624b\\u52a8\\u9500\\u6bc1ohm\\u83b7\\u5f97\\u5176\\u4ed6\\u8d44\\u4ea7\\u4ee3\\u5e01\\uff0c\\u518d\\u4e70\\u5165ohm\\u6765\\u9500\\u6bc1\\uff0c\\u6216\\u662f\\u7528\\u4e0a\\u9762deposit\\u7528token\\u63d0\\u4f9bohm\\n\\n    /**\\n     * @notice allow approved address to burn OHM for reserves\\n     * @param _amount uint256\\n     * @param _token address\\n     */\\n    //\\u9500\\u6bc1 ohm \\u8f6c\\u8d70 token\\n    function withdraw(uint256 _amount, address _token) external override {\\n        require(permissions[STATUS.RESERVETOKEN][_token], notAccepted); // Only reserves can be used for redemptions\\n        require(permissions[STATUS.RESERVESPENDER][msg.sender], notApproved);\\n\\n        uint256 value = tokenValue(_token, _amount);\\n        OHM.burnFrom(msg.sender, value);\\n\\n        totalReserves = totalReserves.sub(value);\\n\\n        IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n        emit Withdrawal(_token, _amount, value);\\n    }\\n\\n    /**\\n     * @notice allow approved address to withdraw assets\\n     * @param _token address\\n     * @param _amount uint256\\n     */\\n    //\\u6279\\u51c6\\u7684\\u5730\\u5740\\u8f6c\\u8d70\\u8d44\\u4ea7\\n    function manage(address _token, uint256 _amount) external override {\\n        if (permissions[STATUS.LIQUIDITYTOKEN][_token]) {\\n            require(permissions[STATUS.LIQUIDITYMANAGER][msg.sender], notApproved);\\n        } else {\\n            require(permissions[STATUS.RESERVEMANAGER][msg.sender], notApproved);\\n        }\\n        if (permissions[STATUS.RESERVETOKEN][_token] || permissions[STATUS.LIQUIDITYTOKEN][_token]) {\\n            uint256 value = tokenValue(_token, _amount);\\n            require(value <= excessReserves(), insufficientReserves);\\n            totalReserves = totalReserves.sub(value);\\n        }\\n        IERC20(_token).safeTransfer(msg.sender, _amount);\\n        emit Managed(_token, _amount);\\n    }\\n\\n    /**\\n     * @notice mint new OHM using excess reserves\\n     * @param _recipient address\\n     * @param _amount uint256\\n     */\\n    function mint(address _recipient, uint256 _amount) external override {\\n        require(permissions[STATUS.REWARDMANAGER][msg.sender], notApproved);\\n        require(_amount <= excessReserves(), insufficientReserves);\\n        OHM.mint(_recipient, _amount);\\n        emit Minted(msg.sender, _recipient, _amount);\\n    }\\n\\n    /**\\n     * DEBT: The debt functions allow approved addresses to borrow treasury assets\\n     * or OHM from the treasury, using sOHM as collateral. This might allow an\\n     * sOHM holder to provide OHM liquidity without taking on the opportunity cost\\n     * of unstaking, or alter their backing without imposing risk onto the treasury.\\n     * Many of these use cases are yet to be defined, but they appear promising.\\n     * However, we urge the community to think critically and move slowly upon\\n     * proposals to acquire these permissions.\\n     */\\n\\n    /**\\n     * @notice allow approved address to borrow reserves\\n     * @param _amount uint256\\n     * @param _token address\\n     */\\n    function incurDebt(uint256 _amount, address _token) external override {\\n        uint256 value;\\n        if (_token == address(OHM)) {\\n            require(permissions[STATUS.OHMDEBTOR][msg.sender], notApproved);\\n            value = _amount;\\n        } else {\\n            require(permissions[STATUS.RESERVEDEBTOR][msg.sender], notApproved);\\n            require(permissions[STATUS.RESERVETOKEN][_token], notAccepted);\\n            value = tokenValue(_token, _amount);\\n        }\\n        require(value != 0, invalidToken);\\n\\n        sOHM.changeDebt(value, msg.sender, true);\\n        require(sOHM.debtBalances(msg.sender) <= debtLimit[msg.sender], \\\"Treasury: exceeds limit\\\");\\n        totalDebt = totalDebt.add(value);\\n\\n        if (_token == address(OHM)) {\\n            OHM.mint(msg.sender, value);\\n            ohmDebt = ohmDebt.add(value);\\n        } else {\\n            totalReserves = totalReserves.sub(value);\\n            IERC20(_token).safeTransfer(msg.sender, _amount);\\n        }\\n        emit CreateDebt(msg.sender, _token, _amount, value);\\n    }\\n\\n    /**\\n     * @notice allow approved address to repay borrowed reserves with reserves\\n     * @param _amount uint256\\n     * @param _token address\\n     */\\n    function repayDebtWithReserve(uint256 _amount, address _token) external override {\\n        require(permissions[STATUS.RESERVEDEBTOR][msg.sender], notApproved);\\n        require(permissions[STATUS.RESERVETOKEN][_token], notAccepted);\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n        uint256 value = tokenValue(_token, _amount);\\n        sOHM.changeDebt(value, msg.sender, false);\\n        totalDebt = totalDebt.sub(value);\\n        totalReserves = totalReserves.add(value);\\n        emit RepayDebt(msg.sender, _token, _amount, value);\\n    }\\n\\n    /**\\n     * @notice allow approved address to repay borrowed reserves with OHM\\n     * @param _amount uint256\\n     */\\n    function repayDebtWithOHM(uint256 _amount) external {\\n        require(\\n            permissions[STATUS.RESERVEDEBTOR][msg.sender] || permissions[STATUS.OHMDEBTOR][msg.sender],\\n            notApproved\\n        );\\n        OHM.burnFrom(msg.sender, _amount);\\n        sOHM.changeDebt(_amount, msg.sender, false);\\n        totalDebt = totalDebt.sub(_amount);\\n        ohmDebt = ohmDebt.sub(_amount);\\n        emit RepayDebt(msg.sender, address(OHM), _amount, _amount);\\n    }\\n\\n    /* ========== MANAGERIAL FUNCTIONS ========== */\\n\\n    /**\\n     * @notice takes inventory of all tracked assets\\n     * @notice always consolidate to recognized reserves before audit\\n     */\\n    function auditReserves() external onlyGovernor {\\n        uint256 reserves;\\n        address[] memory reserveToken = registry[STATUS.RESERVETOKEN];\\n        for (uint256 i = 0; i < reserveToken.length; i++) {\\n            if (permissions[STATUS.RESERVETOKEN][reserveToken[i]]) {\\n                reserves = reserves.add(tokenValue(reserveToken[i], IERC20(reserveToken[i]).balanceOf(address(this))));\\n            }\\n        }\\n        address[] memory liquidityToken = registry[STATUS.LIQUIDITYTOKEN];\\n        for (uint256 i = 0; i < liquidityToken.length; i++) {\\n            if (permissions[STATUS.LIQUIDITYTOKEN][liquidityToken[i]]) {\\n                reserves = reserves.add(\\n                    tokenValue(liquidityToken[i], IERC20(liquidityToken[i]).balanceOf(address(this)))\\n                );\\n            }\\n        }\\n        totalReserves = reserves;\\n        emit ReservesAudited(reserves);\\n    }\\n\\n    /**\\n     * @notice set max debt for address\\n     * @param _address address\\n     * @param _limit uint256\\n     */\\n    function setDebtLimit(address _address, uint256 _limit) external onlyGovernor {\\n        debtLimit[_address] = _limit;\\n    }\\n\\n    /**\\n     * @notice enable permission from queue\\n     * @param _status STATUS\\n     * @param _address address\\n     * @param _calculator address\\n     */\\n    function enable(\\n        STATUS _status,\\n        address _address,\\n        address _calculator\\n    ) external onlyGovernor {\\n        require(timelockEnabled == false, \\\"Use queueTimelock\\\");\\n        if (_status == STATUS.SOHM) {\\n            sOHM = IsOHM(_address);\\n        } else {\\n            permissions[_status][_address] = true;\\n\\n            if (_status == STATUS.LIQUIDITYTOKEN) {\\n                bondCalculator[_address] = _calculator;\\n            }\\n\\n            (bool registered, ) = indexInRegistry(_address, _status);\\n            if (!registered) {\\n                registry[_status].push(_address);\\n\\n                if (_status == STATUS.LIQUIDITYTOKEN || _status == STATUS.RESERVETOKEN) {\\n                    (bool reg, uint256 index) = indexInRegistry(_address, _status);\\n                    if (reg) {\\n                        delete registry[_status][index];\\n                    }\\n                }\\n            }\\n        }\\n        emit Permissioned(_address, _status, true);\\n    }\\n\\n    /**\\n     *  @notice disable permission from address\\n     *  @param _status STATUS\\n     *  @param _toDisable address\\n     */\\n    function disable(STATUS _status, address _toDisable) external {\\n        require(msg.sender == authority.governor() || msg.sender == authority.guardian(), \\\"Only governor or guardian\\\");\\n        permissions[_status][_toDisable] = false;\\n        emit Permissioned(_toDisable, _status, false);\\n    }\\n\\n    /**\\n     * @notice check if registry contains address\\n     * @return (bool, uint256)\\n     */\\n    function indexInRegistry(address _address, STATUS _status) public view returns (bool, uint256) {\\n        address[] memory entries = registry[_status];\\n        for (uint256 i = 0; i < entries.length; i++) {\\n            if (_address == entries[i]) {\\n                return (true, i);\\n            }\\n        }\\n        return (false, 0);\\n    }\\n\\n    /* ========== TIMELOCKED FUNCTIONS ========== */\\n\\n    // functions are used prior to enabling on-chain governance\\n\\n    /**\\n     * @notice queue address to receive permission\\n     * @param _status STATUS\\n     * @param _address address\\n     * @param _calculator address\\n     */\\n    function queueTimelock(\\n        STATUS _status,\\n        address _address,\\n        address _calculator\\n    ) external onlyGovernor {\\n        require(_address != address(0));\\n        require(timelockEnabled == true, \\\"Timelock is disabled, use enable\\\");\\n\\n        uint256 timelock = block.number.add(blocksNeededForQueue);\\n        if (_status == STATUS.RESERVEMANAGER || _status == STATUS.LIQUIDITYMANAGER) {\\n            timelock = block.number.add(blocksNeededForQueue.mul(2));\\n        }\\n        permissionQueue.push(\\n            Queue({\\n                managing: _status,\\n                toPermit: _address,\\n                calculator: _calculator,\\n                timelockEnd: timelock,\\n                nullify: false,\\n                executed: false\\n            })\\n        );\\n        emit PermissionQueued(_status, _address);\\n    }\\n\\n    /**\\n     *  @notice enable queued permission\\n     *  @param _index uint256\\n     */\\n    function execute(uint256 _index) external {\\n        require(timelockEnabled == true, \\\"Timelock is disabled, use enable\\\");\\n\\n        Queue memory info = permissionQueue[_index];\\n\\n        require(!info.nullify, \\\"Action has been nullified\\\");\\n        require(!info.executed, \\\"Action has already been executed\\\");\\n        require(block.number >= info.timelockEnd, \\\"Timelock not complete\\\");\\n\\n        if (info.managing == STATUS.SOHM) {\\n            // 9\\n            sOHM = IsOHM(info.toPermit);\\n        } else {\\n            permissions[info.managing][info.toPermit] = true;\\n\\n            if (info.managing == STATUS.LIQUIDITYTOKEN) {\\n                bondCalculator[info.toPermit] = info.calculator;\\n            }\\n            (bool registered, ) = indexInRegistry(info.toPermit, info.managing);\\n            if (!registered) {\\n                registry[info.managing].push(info.toPermit);\\n\\n                if (info.managing == STATUS.LIQUIDITYTOKEN) {\\n                    (bool reg, uint256 index) = indexInRegistry(info.toPermit, STATUS.RESERVETOKEN);\\n                    if (reg) {\\n                        delete registry[STATUS.RESERVETOKEN][index];\\n                    }\\n                } else if (info.managing == STATUS.RESERVETOKEN) {\\n                    (bool reg, uint256 index) = indexInRegistry(info.toPermit, STATUS.LIQUIDITYTOKEN);\\n                    if (reg) {\\n                        delete registry[STATUS.LIQUIDITYTOKEN][index];\\n                    }\\n                }\\n            }\\n        }\\n        permissionQueue[_index].executed = true;\\n        emit Permissioned(info.toPermit, info.managing, true);\\n    }\\n\\n    /**\\n     * @notice cancel timelocked action\\n     * @param _index uint256\\n     */\\n    function nullify(uint256 _index) external onlyGovernor {\\n        permissionQueue[_index].nullify = true;\\n    }\\n\\n    /**\\n     * @notice disables timelocked functions\\n     */\\n    function disableTimelock() external onlyGovernor {\\n        require(timelockEnabled == true, \\\"timelock already disabled\\\");\\n        if (onChainGovernanceTimelock != 0 && onChainGovernanceTimelock <= block.number) {\\n            timelockEnabled = false;\\n        } else {\\n            onChainGovernanceTimelock = block.number.add(blocksNeededForQueue.mul(7)); // 7-day timelock\\n        }\\n    }\\n\\n    /**\\n     * @notice enables timelocks after initilization\\n     */\\n    function initialize() external onlyGovernor {\\n        require(initialized == false, \\\"Already initialized\\\");\\n        timelockEnabled = true;\\n        initialized = true;\\n    }\\n\\n    /* ========== VIEW FUNCTIONS ========== */\\n\\n    /**\\n     * @notice returns excess reserves not backing tokens\\n     * @return uint\\n     */\\n    function excessReserves() public view override returns (uint256) {\\n        return totalReserves.sub(OHM.totalSupply().sub(totalDebt));\\n    }\\n\\n    /**\\n     * @notice returns OHM valuation of asset\\n     * @param _token address\\n     * @param _amount uint256\\n     * @return value_ uint256\\n     */\\n    function tokenValue(address _token, uint256 _amount) public view override returns (uint256 value_) {\\n        value_ = _amount.mul(10**IERC20Metadata(address(OHM)).decimals()).div(10**IERC20Metadata(_token).decimals());\\n\\n        if (permissions[STATUS.LIQUIDITYTOKEN][_token]) {\\n            value_ = IBondingCalculator(bondCalculator[_token]).valuation(_token, _amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice returns supply metric that cannot be manipulated by debt\\n     * @dev use this any time you need to query supply\\n     * @return uint256\\n     */\\n    function baseSupply() external view override returns (uint256) {\\n        return OHM.totalSupply() - ohmDebt;\\n    }\\n}\\n\",\"keccak256\":\"0x5f32c649596ff0938c23e783388346b4bb6f3b966816d9c4cc59720ceda1df79\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IBondingCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IBondingCalculator {\\n    function markdown(address _LP) external view returns (uint256);\\n\\n    function valuation(address pair_, uint256 amount_) external view returns (uint256 _value);\\n}\\n\",\"keccak256\":\"0x1df1a239bcd677a1cb69275ccad669d13ba4b919ea19005cdf118237856d2864\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5e7c863b5ab16bc16a88ab5ce889edd21e9f834d3bcb6817818e8f3f16726694\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IERC20Metadata is IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xa2eeece2a70fa41c16f33bc7fd881f6b90714ee08afa48041d73d433705c2d2d\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IOHM.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IOHM is IERC20 {\\n    function mint(address account_, uint256 amount_) external;\\n\\n    function burn(uint256 amount) external;\\n\\n    function burnFrom(address account_, uint256 amount_) external;\\n}\\n\",\"keccak256\":\"0xa7c8137b4afb4645fb9226c0fc86e420bef4fbd4111aa2cd379d1ba684a62436\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IOlympusAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IOlympusAuthority {\\n    /* ========== EVENTS ========== */\\n\\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n\\n    event GovernorPulled(address indexed from, address indexed to);\\n    event GuardianPulled(address indexed from, address indexed to);\\n    event PolicyPulled(address indexed from, address indexed to);\\n    event VaultPulled(address indexed from, address indexed to);\\n\\n    /* ========== VIEW ========== */\\n\\n    function governor() external view returns (address);\\n\\n    function guardian() external view returns (address);\\n\\n    function policy() external view returns (address);\\n\\n    function vault() external view returns (address);\\n\\n    function addMinter(address) external;\\n\\n    function subMinter(address) external;\\n\\n    function minters(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x3e87025bb1b05ff13cca8157bb628dd73f2b6672b9db02e3f3d66b87df12cfce\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface IOwnable {\\n    function owner() external view returns (address);\\n\\n    function renounceManagement() external;\\n\\n    function pushManagement(address newOwner_) external;\\n\\n    function pullManagement() external;\\n}\\n\",\"keccak256\":\"0xc1f818d87e823488c6004c50f0daba63d6ad2f0bfe46f19e4352d2000e51400e\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\ninterface ITreasury {\\n    function deposit(\\n        uint256 _amount,\\n        address _token,\\n        uint256 _profit\\n    ) external returns (uint256);\\n\\n    function withdraw(uint256 _amount, address _token) external;\\n\\n    function tokenValue(address _token, uint256 _amount) external view returns (uint256 value_);\\n\\n    function mint(address _recipient, uint256 _amount) external;\\n\\n    function manage(address _token, uint256 _amount) external;\\n\\n    function incurDebt(uint256 amount_, address token_) external;\\n\\n    function repayDebtWithReserve(uint256 amount_, address token_) external;\\n\\n    function excessReserves() external view returns (uint256);\\n\\n    function baseSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x6f4e16b5c162d5a2fbd40e764ca3b5cdf6e903409c021fce1982f4439de68fcb\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IsOHM.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IsOHM is IERC20 {\\n    function rebase(uint256 ohmProfit_, uint256 epoch_) external returns (uint256);\\n\\n    function circulatingSupply() external view returns (uint256);\\n\\n    function gonsForBalance(uint256 amount) external view returns (uint256);\\n\\n    function balanceForGons(uint256 gons) external view returns (uint256);\\n\\n    function index() external view returns (uint256);\\n\\n    function toG(uint256 amount) external view returns (uint256);\\n\\n    function fromG(uint256 amount) external view returns (uint256);\\n\\n    function changeDebt(\\n        uint256 amount,\\n        address debtor,\\n        bool add\\n    ) external;\\n\\n    function debtBalances(address _address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x57486feac9a75b08024d2781d5a94c2a35a8a46f04c56771d6f20a646b3d65ff\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.8.10;\\n\\nimport {IERC20} from \\\"../interfaces/IERC20.sol\\\";\\n\\n/// @notice Safe IERC20 and ETH transfer library that safely handles missing return values.\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\\n/// Taken from Solmate\\nlibrary SafeERC20 {\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transfer.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.approve.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        (bool success, ) = to.call{value: amount}(new bytes(0));\\n\\n        require(success, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x060047addcb2f9e0c536d6bea7dd50384b02c08acab2c5b761067544b3a8a0db\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\\nlibrary SafeMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        assert(a == b * c + (a % b)); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    // Only used in the  BondingCalculator.sol\\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\\n        if (a > 3) {\\n            c = a;\\n            uint256 b = add(div(a, 2), 1);\\n            while (b < c) {\\n                c = b;\\n                b = div(add(div(a, b), b), 2);\\n            }\\n        } else if (a != 0) {\\n            c = 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x521bd2b4dea1c478051130fd4753d1f22ba6d59819d4df95b8b5ed75f04d1291\",\"license\":\"AGPL-3.0\"},\"contracts/types/OlympusAccessControlled.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"../interfaces/IOlympusAuthority.sol\\\";\\n\\nabstract contract OlympusAccessControlled {\\n    /* ========== EVENTS ========== */\\n\\n    event AuthorityUpdated(IOlympusAuthority indexed authority);\\n\\n    string UNAUTHORIZED = \\\"UNAUTHORIZED\\\"; // save gas\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IOlympusAuthority public authority;\\n\\n    /* ========== Constructor ========== */\\n\\n    constructor(IOlympusAuthority _authority) {\\n        authority = _authority;\\n        emit AuthorityUpdated(_authority);\\n    }\\n\\n    /* ========== MODIFIERS ========== */\\n\\n    modifier onlyGovernor() {\\n        require(msg.sender == authority.governor(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyGuardian() {\\n        require(msg.sender == authority.guardian(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyPolicy() {\\n        require(msg.sender == authority.policy(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyVault() {\\n        require(authority.minters(msg.sender), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    /* ========== GOV ONLY ========== */\\n\\n    function setAuthority(IOlympusAuthority _newAuthority) external onlyGovernor {\\n        authority = _newAuthority;\\n        emit AuthorityUpdated(_newAuthority);\\n    }\\n}\\n\",\"keccak256\":\"0x8bf1acb3746665ec63dfef67e8c6c81eae52f2252e227f78e7463fb15f533c76\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x610100604052600c60c08190526b15539055551213d49256915160a21b60e09081526200003091600091906200023a565b506040805180820190915260168082527f54726561737572793a206e6f742061636365707465640000000000000000000060209092019182526200007791600d916200023a565b506040805180820190915260168082527f54726561737572793a206e6f7420617070726f766564000000000000000000006020909201918252620000be91600e916200023a565b506040805180820190915260178082527f54726561737572793a20696e76616c696420746f6b656e00000000000000000060209092019182526200010591600f916200023a565b5060408051808201909152601f8082527f54726561737572793a20696e73756666696369656e742072657365727665730060209092019182526200014c916010916200023a565b503480156200015a57600080fd5b5060405162003c8c38038062003c8c8339810160408190526200017d91620002fd565b600180546001600160a01b0319166001600160a01b0383169081179091556040518291907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a2506001600160a01b038316620002175760405162461bcd60e51b81526020600482015260116024820152705a65726f20616464726573733a204f484d60781b604482015260640160405180910390fd5b506001600160a01b03909116608052600b805461ffff1916905560a0526200037b565b82805462000248906200033e565b90600052602060002090601f0160209004810192826200026c5760008555620002b7565b82601f106200028757805160ff1916838001178555620002b7565b82800160010185558215620002b7579182015b82811115620002b75782518255916020019190600101906200029a565b50620002c5929150620002c9565b5090565b5b80821115620002c55760008155600101620002ca565b80516001600160a01b0381168114620002f857600080fd5b919050565b6000806000606084860312156200031357600080fd5b6200031e84620002e0565b9250602084015191506200033560408501620002e0565b90509250925092565b600181811c908216806200035357607f821691505b602082108114156200037557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05161388962000403600039600081816104bb01528181611061015281816110c50152611ccd01526000818161045801528181610603015281816108c2015281816109fe01528181610afe01528181610b5b01528181610e0501528181610e59015281816116b301528181611e0a015281816121c301526127d601526138896000f3fe608060405234801561001057600080fd5b506004361061021b5760003560e01c80637d921af011610125578063b39df88e116100ad578063d796ffb81161007c578063d796ffb8146104dd578063e4e33ef8146104f0578063f182178314610503578063fc7b9c1814610516578063fe0d94c11461051f57600080fd5b8063b39df88e14610487578063bc157ac114610490578063bf7e214f146104a3578063d07f390f146104b657600080fd5b806393988b53116100f457806393988b53146104035780639edd8d431461042d578063a44b828714610440578063a6c41fec14610453578063b320f6a91461047a57600080fd5b80637d921af0146103e25780638129fc1c146103ea578063860f5048146103f25780638f840ddd146103fa57600080fd5b80632b7ce500116101a8578063503edcf011610177578063503edcf01461036457806352991831146103895780635619004b1461039c57806371a45c95146103bc5780637a9e5e4b146103cf57600080fd5b80632b7ce50014610312578063330dd3451461031a578063341f96881461034857806340c10f191461035157600080fd5b806312422d23116101ef57806312422d23146102765780631507992514610289578063158ef93e146102b45780631af4da70146102d65780631d6d5f05146102ff57600080fd5b8062f714ce146102205780630b0eee30146102355780630c3513a8146102485780630f70431f14610263575b600080fd5b61023361022e3660046132ab565b610532565b005b6102336102433660046132db565b6106d6565b6102506108b5565b6040519081526020015b60405180910390f35b610233610271366004613307565b610956565b6102336102843660046132ab565b610b57565b60025461029c906001600160a01b031681565b6040516001600160a01b03909116815260200161025a565b600b546102c690610100900460ff1681565b604051901515815260200161025a565b61029c6102e4366004613320565b6005602052600090815260409020546001600160a01b031681565b61023361030d366004613351565b610f43565b610233611258565b6102c661032836600461339a565b600460209081526000928352604080842090915290825290205460ff1681565b61025060095481565b61023361035f3660046132db565b61160e565b610377610372366004613307565b611753565b60405161025a969594939291906133dc565b61023361039736600461339a565b6117aa565b6102506103aa366004613320565b60066020526000908152604090205481565b6102336103ca366004613307565b6119c2565b6102336103dd366004613320565b611aa8565b610233611b9e565b610233611cf8565b610250611e03565b61025060075481565b610416610411366004613435565b611e94565b60408051921515835260208301919091520161025a565b61023361043b3660046132db565b611f98565b61029c61044e36600461346a565b612060565b61029c7f000000000000000000000000000000000000000000000000000000000000000081565b600b546102c69060ff1681565b610250600c5481565b61025061049e366004613486565b612098565b60015461029c906001600160a01b031681565b6102507f000000000000000000000000000000000000000000000000000000000000000081565b6102336104eb3660046132ab565b612284565b6102336104fe366004613351565b612412565b6102506105113660046132db565b61275f565b61025060085481565b61023361052d366004613307565b61292d565b6001600160a01b038116600090815260008051602061385d8339815191526020526040902054600d9060ff166105845760405162461bcd60e51b815260040161057b91906134be565b60405180910390fd5b503360009081527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe056020526040902054600e9060ff166105d75760405162461bcd60e51b815260040161057b91906134be565b5060006105e4828461275f565b60405163079cc67960e41b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906379cc679090604401600060405180830381600087803b15801561064f57600080fd5b505af1158015610663573d6000803e3d6000fd5b50506007546106759250905082612e6b565b60075561068c6001600160a01b0383163385612ead565b60408051848152602081018390526001600160a01b038416917fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb91015b60405180910390a2505050565b6001600160a01b038216600090815260008051602061383d833981519152602052604090205460ff161561075c573360009081527fc59312466997bb42aaaf719ece141047820e6b34531e1670dc1852a453648f0f6020526040902054600e9060ff166107565760405162461bcd60e51b815260040161057b91906134be565b506107b0565b3360009081527f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa06020526040902054600e9060ff166107ae5760405162461bcd60e51b815260040161057b91906134be565b505b6001600160a01b038216600090815260008051602061385d833981519152602052604090205460ff168061080957506001600160a01b038216600090815260008051602061383d833981519152602052604090205460ff165b1561085a57600061081a838361275f565b90506108246108b5565b8111156010906108475760405162461bcd60e51b815260040161057b91906134be565b506007546108559082612e6b565b600755505b61086e6001600160a01b0383163383612ead565b816001600160a01b03167fb4460e34f1e91c4fa28eb7fac4cbd88cf530ef54a67e1978cd5edd9f77033ead826040516108a991815260200190565b60405180910390a25050565b60006109516109486008547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190613566565b90612e6b565b60075490612e6b565b905090565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e551602052604090205460ff16806109c157503360009081527f5c6b02db8b672415ffad906d7ccee10bd53dbad7d0b29e2bc0e50c93d5f31093602052604090205460ff165b600e906109e15760405162461bcd60e51b815260040161057b91906134be565b5060405163079cc67960e41b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906379cc679090604401600060405180830381600087803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b505060025460405163ae5c6cd360e01b815260048101859052336024820152600060448201526001600160a01b03909116925063ae5c6cd39150606401600060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b5050600854610adb9250905082612e6b565b600855600954610aeb9082612e6b565b60095560408051828152602081018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169133917fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309910160405180910390a350565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610bee573360009081527f5c6b02db8b672415ffad906d7ccee10bd53dbad7d0b29e2bc0e50c93d5f310936020526040902054600e9060ff16610be55760405162461bcd60e51b815260040161057b91906134be565b50829050610c98565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e5516020526040902054600e9060ff16610c405760405162461bcd60e51b815260040161057b91906134be565b506001600160a01b038216600090815260008051602061385d8339815191526020526040902054600d9060ff16610c8a5760405162461bcd60e51b815260040161057b91906134be565b50610c95828461275f565b90505b600f81610cb85760405162461bcd60e51b815260040161057b91906134be565b5060025460405163ae5c6cd360e01b815260048101839052336024820152600160448201526001600160a01b039091169063ae5c6cd390606401600060405180830381600087803b158015610d0c57600080fd5b505af1158015610d20573d6000803e3d6000fd5b5050336000818152600660205260409081902054600254915163313bc71360e21b8152600481019390935293506001600160a01b0316915063c4ef1c4c90602401602060405180830381865afa158015610d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da29190613566565b1115610df05760405162461bcd60e51b815260206004820152601760248201527f54726561737572793a2065786365656473206c696d6974000000000000000000604482015260640161057b565b600854610dfd9082612fba565b6008819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610ed3576040516340c10f1960e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b158015610ea557600080fd5b505af1158015610eb9573d6000803e3d6000fd5b5050600954610ecb9250905082612fba565b600955610ef7565b600754610ee09082612e6b565b600755610ef76001600160a01b0383163385612ead565b60408051848152602081018390526001600160a01b0384169133917f7e1a939bed137a819b5d2979822c67f877689f7a863d5e4cb57cdca97b2977d691015b60405180910390a3505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fba919061357f565b6001600160a01b0316336001600160a01b031614600090610fee5760405162461bcd60e51b815260040161057b91906134be565b506001600160a01b03821661100257600080fd5b600b5460ff1615156001146110595760405162461bcd60e51b815260206004820181905260248201527f54696d656c6f636b2069732064697361626c65642c2075736520656e61626c65604482015260640161057b565b6000611085437f0000000000000000000000000000000000000000000000000000000000000000612fba565b9050600384600a81111561109b5761109b6133c6565b14806110b85750600684600a8111156110b6576110b66133c6565b145b156110f5576110f26110eb7f00000000000000000000000000000000000000000000000000000000000000006002613019565b4390612fba565b90505b600a6040518060c0016040528086600a811115611114576111146133c6565b81526001600160a01b0380871660208084019190915290861660408301526060820185905260006080830181905260a090920182905283546001818101865594835291208251600490920201805492939092839160ff199091169083600a811115611181576111816133c6565b021790555060208201518154610100600160a81b0319166101006001600160a01b03928316810291909117835560408401516001840180546001600160a01b03191691909316179091556060830151600283015560808301516003909201805460a09094015161ffff1990941692151561ff001916929092179215150291909117905583600a811115611216576112166133c6565b6040516001600160a01b03851681527fc822ff41836a6dc998393c71843db8adcbbf01721f41b32389f6838ecb1ea9c89060200160405180910390a250505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cf919061357f565b6001600160a01b0316336001600160a01b0316146000906113035760405162461bcd60e51b815260040161057b91906134be565b5060026000908152600360209081527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d8054604080518285028101850190915281815284939092919083018282801561138557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611367575b5050505050905060005b81518110156114b757600260009081526004602052825160008051602061385d83398151915291908490849081106113c9576113c961359c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156114a5576114a261149b83838151811061140d5761140d61359c565b60200260200101518484815181106114275761142761359c565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611477573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190613566565b8490612fba565b92505b806114af816135c8565b91505061138f565b5060056000908152600360209081527f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b465942250805460408051828502810185019091528181529283018282801561153457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611516575b5050505050905060005b81518110156115d857600560009081526004602052825160008051602061383d83398151915291908490849081106115785761157861359c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156115c6576115c36115bc83838151811061140d5761140d61359c565b8590612fba565b93505b806115d0816135c8565b91505061153e565b50600783905560405183907fec691f09f6924b27932253f85caf99bacc30360cc0e50a1cc4d2acc24601446690600090a2505050565b3360009081527f2645749a946633740611cfc8178319f0958659d6922e4bf7e3a08b44789f53a46020526040902054600e9060ff166116605760405162461bcd60e51b815260040161057b91906134be565b506116696108b5565b81111560109061168c5760405162461bcd60e51b815260040161057b91906134be565b506040516340c10f1960e01b81526001600160a01b038381166004830152602482018390527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b1580156116f757600080fd5b505af115801561170b573d6000803e3d6000fd5b50506040518381526001600160a01b03851692503391507f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050565b600a818154811061176357600080fd5b6000918252602090912060049091020180546001820154600283015460039093015460ff80841695506001600160a01b036101009485900481169593169382821692041686565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611821919061357f565b6001600160a01b0316336001600160a01b031614806118c75750600160009054906101000a90046001600160a01b03166001600160a01b031663452a93206040518163ffffffff1660e01b8152600401602060405180830381865afa15801561188e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b2919061357f565b6001600160a01b0316336001600160a01b0316145b6119135760405162461bcd60e51b815260206004820152601960248201527f4f6e6c7920676f7665726e6f72206f7220677561726469616e00000000000000604482015260640161057b565b60006004600084600a81111561192b5761192b6133c6565b600a81111561193c5761193c6133c6565b8152602080820192909252604090810160009081206001600160a01b03861682529092529020805460ff191691151591909117905581600a811115611983576119836133c6565b604080516001600160a01b0384168152600060208201527f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e171391016108a9565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a39919061357f565b6001600160a01b0316336001600160a01b031614600090611a6d5760405162461bcd60e51b815260040161057b91906134be565b506001600a8281548110611a8357611a8361359c565b60009182526020909120600490910201600301805460ff191691151591909117905550565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1f919061357f565b6001600160a01b0316336001600160a01b031614600090611b535760405162461bcd60e51b815260040161057b91906134be565b50600180546001600160a01b0319166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c15919061357f565b6001600160a01b0316336001600160a01b031614600090611c495760405162461bcd60e51b815260040161057b91906134be565b50600b5460ff161515600114611ca15760405162461bcd60e51b815260206004820152601960248201527f74696d656c6f636b20616c72656164792064697361626c656400000000000000604482015260640161057b565b600c5415801590611cb4575043600c5411155b15611cc557600b805460ff19169055565b611cf36110eb7f00000000000000000000000000000000000000000000000000000000000000006007613019565b600c55565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6f919061357f565b6001600160a01b0316336001600160a01b031614600090611da35760405162461bcd60e51b815260040161057b91906134be565b50600b54610100900460ff1615611df25760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161057b565b600b805461ffff1916610101179055565b60006009547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8a9190613566565b61095191906135e3565b60008060006003600085600a811115611eaf57611eaf6133c6565b600a811115611ec057611ec06133c6565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611f2257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f04575b5050505050905060005b8151811015611f8757818181518110611f4757611f4761359c565b60200260200101516001600160a01b0316866001600160a01b03161415611f7557600193509150611f919050565b80611f7f816135c8565b915050611f2c565b5060008092509250505b9250929050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200f919061357f565b6001600160a01b0316336001600160a01b0316146000906120435760405162461bcd60e51b815260040161057b91906134be565b506001600160a01b03909116600090815260066020526040902055565b6003602052816000526040600020818154811061207c57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001600160a01b038216600090815260008051602061385d833981519152602052604081205460ff16156121245760046000805b600a8111156120dd576120dd6133c6565b815260208082019290925260409081016000908120338252909252902054600e9060ff1661211e5760405162461bcd60e51b815260040161057b91906134be565b50612177565b6001600160a01b038316600090815260008051602061383d833981519152602052604090205460ff161561215c5760046000816120cc565b600f60405162461bcd60e51b815260040161057b91906134be565b61218c6001600160a01b038416333087613098565b6000612198848661275f565b90506121a48184612e6b565b6040516340c10f1960e01b8152336004820152602481018290529092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561220f57600080fd5b505af1158015612223573d6000803e3d6000fd5b50506007546122359250905082612fba565b60075560408051868152602081018390526001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2509392505050565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e5516020526040902054600e9060ff166122d65760405162461bcd60e51b815260040161057b91906134be565b506001600160a01b038116600090815260008051602061385d8339815191526020526040902054600d9060ff166123205760405162461bcd60e51b815260040161057b91906134be565b506123366001600160a01b038216333085613098565b6000612342828461275f565b60025460405163ae5c6cd360e01b815260048101839052336024820152600060448201529192506001600160a01b03169063ae5c6cd390606401600060405180830381600087803b15801561239657600080fd5b505af11580156123aa573d6000803e3d6000fd5b50506008546123bc9250905082612e6b565b6008556007546123cc9082612fba565b60075560408051848152602081018390526001600160a01b0384169133917fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f3099101610f36565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015612465573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612489919061357f565b6001600160a01b0316336001600160a01b0316146000906124bd5760405162461bcd60e51b815260040161057b91906134be565b50600b5460ff16156125055760405162461bcd60e51b815260206004820152601160248201527055736520717565756554696d656c6f636b60781b604482015260640161057b565b600983600a811115612519576125196133c6565b141561253f57600280546001600160a01b0319166001600160a01b03841617905561270e565b60016004600085600a811115612557576125576133c6565b600a811115612568576125686133c6565b8152602080820192909252604090810160009081206001600160a01b03871682529092529020805460ff1916911515919091179055600583600a8111156125b1576125b16133c6565b14156125e6576001600160a01b03828116600090815260056020526040902080546001600160a01b0319169183169190911790555b60006125f28385611e94565b5090508061270c576003600085600a811115612610576126106133c6565b600a811115612621576126216133c6565b8152602080820192909252604001600090812080546001810182559082529190200180546001600160a01b0319166001600160a01b038516179055600584600a811115612670576126706133c6565b148061268d5750600284600a81111561268b5761268b6133c6565b145b1561270c5760008061269f8587611e94565b915091508115612709576003600087600a8111156126bf576126bf6133c6565b600a8111156126d0576126d06133c6565b815260200190815260200160002081815481106126ef576126ef61359c565b600091825260209091200180546001600160a01b03191690555b50505b505b82600a811115612720576127206133c6565b604080516001600160a01b0385168152600160208201527f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e171391016106c9565b600061286e836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c691906135fa565b6127d190600a613701565b6128687f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612832573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061285691906135fa565b61286190600a613701565b8590613019565b906131b3565b6001600160a01b038416600090815260008051602061383d833981519152602052604090205490915060ff1615612927576001600160a01b0383811660008181526005602052604090819020549051634249719f60e01b815260048101929092526024820185905290911690634249719f90604401602060405180830381865afa158015612900573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129249190613566565b90505b92915050565b600b5460ff1615156001146129845760405162461bcd60e51b815260206004820181905260248201527f54696d656c6f636b2069732064697361626c65642c2075736520656e61626c65604482015260640161057b565b6000600a82815481106129995761299961359c565b600091825260209091206040805160c081019091526004909202018054829060ff16600a8111156129cc576129cc6133c6565b600a8111156129dd576129dd6133c6565b815281546001600160a01b03610100918290048116602084015260018401541660408301526002830154606083015260039092015460ff80821615156080808501919091529390910416151560a09091015281015190915015612a825760405162461bcd60e51b815260206004820152601960248201527f416374696f6e20686173206265656e206e756c6c696669656400000000000000604482015260640161057b565b8060a0015115612ad45760405162461bcd60e51b815260206004820181905260248201527f416374696f6e2068617320616c7265616479206265656e206578656375746564604482015260640161057b565b8060600151431015612b205760405162461bcd60e51b815260206004820152601560248201527454696d656c6f636b206e6f7420636f6d706c65746560581b604482015260640161057b565b60098151600a811115612b3557612b356133c6565b1415612b64576020810151600280546001600160a01b0319166001600160a01b03909216919091179055612dd2565b6001600460008360000151600a811115612b8057612b806133c6565b600a811115612b9157612b916133c6565b815260208082019290925260409081016000908120858401516001600160a01b031682529092529020805460ff191691151591909117905560058151600a811115612bde57612bde6133c6565b1415612c1f576040818101516020808401516001600160a01b039081166000908152600590925292902080546001600160a01b031916929091169190911790555b6000612c3382602001518360000151611e94565b50905080612dd057600360008360000151600a811115612c5557612c556133c6565b600a811115612c6657612c666133c6565b81526020808201929092526040016000908120848301518154600181018355918352929091200180546001600160a01b0319166001600160a01b0390921691909117905560058251600a811115612cbf57612cbf6133c6565b1415612d3f57600080612cd784602001516002611e94565b915091508115612d3857600260005260036020527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d805482908110612d1e57612d1e61359c565b600091825260209091200180546001600160a01b03191690555b5050612dd0565b60028251600a811115612d5457612d546133c6565b1415612dd057600080612d6c84602001516005611e94565b915091508115612dcd57600560005260036020527f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b465942250805482908110612db357612db361359c565b600091825260209091200180546001600160a01b03191690555b50505b505b6001600a8381548110612de757612de761359c565b6000918252602090912060036004909202010180549115156101000261ff00199092169190911790558051600a811115612e2357612e236133c6565b602080830151604080516001600160a01b0390921682526001928201929092527f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e171391016108a9565b600061292483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506131f5565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691612f099190613740565b6000604051808303816000865af19150503d8060008114612f46576040519150601f19603f3d011682016040523d82523d6000602084013e612f4b565b606091505b5091509150818015612f75575080511580612f75575080806020019051810190612f75919061375c565b612fb35760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161057b565b5050505050565b600080612fc7838561377e565b9050838110156129245760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161057b565b60008261302857506000612927565b60006130348385613796565b90508261304185836137cb565b146129245760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161057b565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916130fc9190613740565b6000604051808303816000865af19150503d8060008114613139576040519150601f19603f3d011682016040523d82523d6000602084013e61313e565b606091505b5091509150818015613168575080511580613168575080806020019051810190613168919061375c565b6131ab5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161057b565b505050505050565b600061292483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061322f565b600081848411156132195760405162461bcd60e51b815260040161057b91906137df565b50600061322684866135e3565b95945050505050565b600081836132505760405162461bcd60e51b815260040161057b91906137df565b50600061325d84866137cb565b90506132698486613812565b6132738286613796565b61327d919061377e565b851461328b5761328b613826565b949350505050565b6001600160a01b03811681146132a857600080fd5b50565b600080604083850312156132be57600080fd5b8235915060208301356132d081613293565b809150509250929050565b600080604083850312156132ee57600080fd5b82356132f981613293565b946020939093013593505050565b60006020828403121561331957600080fd5b5035919050565b60006020828403121561333257600080fd5b813561292481613293565b8035600b811061334c57600080fd5b919050565b60008060006060848603121561336657600080fd5b61336f8461333d565b9250602084013561337f81613293565b9150604084013561338f81613293565b809150509250925092565b600080604083850312156133ad57600080fd5b6133b68361333d565b915060208301356132d081613293565b634e487b7160e01b600052602160045260246000fd5b60c08101600b88106133fe57634e487b7160e01b600052602160045260246000fd5b9681526001600160a01b03958616602082015293909416604084015260608301919091521515608082015290151560a09091015290565b6000806040838503121561344857600080fd5b823561345381613293565b91506134616020840161333d565b90509250929050565b6000806040838503121561347d57600080fd5b6132f98361333d565b60008060006060848603121561349b57600080fd5b8335925060208401356134ad81613293565b929592945050506040919091013590565b600060208083526000845481600182811c9150808316806134e057607f831692505b8583108114156134fe57634e487b7160e01b85526022600452602485fd5b87860183815260200181801561351b576001811461352c57613557565b60ff19861682528782019650613557565b60008b81526020902060005b8681101561355157815484820152908501908901613538565b83019750505b50949998505050505050505050565b60006020828403121561357857600080fd5b5051919050565b60006020828403121561359157600080fd5b815161292481613293565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156135dc576135dc6135b2565b5060010190565b6000828210156135f5576135f56135b2565b500390565b60006020828403121561360c57600080fd5b815160ff8116811461292457600080fd5b600181815b8085111561365857816000190482111561363e5761363e6135b2565b8085161561364b57918102915b93841c9390800290613622565b509250929050565b60008261366f57506001612927565b8161367c57506000612927565b8160018114613692576002811461369c576136b8565b6001915050612927565b60ff8411156136ad576136ad6135b2565b50506001821b612927565b5060208310610133831016604e8410600b84101617156136db575081810a612927565b6136e5838361361d565b80600019048211156136f9576136f96135b2565b029392505050565b600061292460ff841683613660565b60005b8381101561372b578181015183820152602001613713565b8381111561373a576000848401525b50505050565b60008251613752818460208701613710565b9190910192915050565b60006020828403121561376e57600080fd5b8151801515811461292457600080fd5b60008219821115613791576137916135b2565b500190565b60008160001904831182151516156137b0576137b06135b2565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826137da576137da6137b5565b500490565b60208152600082518060208401526137fe816040850160208701613710565b601f01601f19169190910160400192915050565b600082613821576138216137b5565b500690565b634e487b7160e01b600052600160045260246000fdfe04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f0591da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7a164736f6c634300080a000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061021b5760003560e01c80637d921af011610125578063b39df88e116100ad578063d796ffb81161007c578063d796ffb8146104dd578063e4e33ef8146104f0578063f182178314610503578063fc7b9c1814610516578063fe0d94c11461051f57600080fd5b8063b39df88e14610487578063bc157ac114610490578063bf7e214f146104a3578063d07f390f146104b657600080fd5b806393988b53116100f457806393988b53146104035780639edd8d431461042d578063a44b828714610440578063a6c41fec14610453578063b320f6a91461047a57600080fd5b80637d921af0146103e25780638129fc1c146103ea578063860f5048146103f25780638f840ddd146103fa57600080fd5b80632b7ce500116101a8578063503edcf011610177578063503edcf01461036457806352991831146103895780635619004b1461039c57806371a45c95146103bc5780637a9e5e4b146103cf57600080fd5b80632b7ce50014610312578063330dd3451461031a578063341f96881461034857806340c10f191461035157600080fd5b806312422d23116101ef57806312422d23146102765780631507992514610289578063158ef93e146102b45780631af4da70146102d65780631d6d5f05146102ff57600080fd5b8062f714ce146102205780630b0eee30146102355780630c3513a8146102485780630f70431f14610263575b600080fd5b61023361022e3660046132ab565b610532565b005b6102336102433660046132db565b6106d6565b6102506108b5565b6040519081526020015b60405180910390f35b610233610271366004613307565b610956565b6102336102843660046132ab565b610b57565b60025461029c906001600160a01b031681565b6040516001600160a01b03909116815260200161025a565b600b546102c690610100900460ff1681565b604051901515815260200161025a565b61029c6102e4366004613320565b6005602052600090815260409020546001600160a01b031681565b61023361030d366004613351565b610f43565b610233611258565b6102c661032836600461339a565b600460209081526000928352604080842090915290825290205460ff1681565b61025060095481565b61023361035f3660046132db565b61160e565b610377610372366004613307565b611753565b60405161025a969594939291906133dc565b61023361039736600461339a565b6117aa565b6102506103aa366004613320565b60066020526000908152604090205481565b6102336103ca366004613307565b6119c2565b6102336103dd366004613320565b611aa8565b610233611b9e565b610233611cf8565b610250611e03565b61025060075481565b610416610411366004613435565b611e94565b60408051921515835260208301919091520161025a565b61023361043b3660046132db565b611f98565b61029c61044e36600461346a565b612060565b61029c7f000000000000000000000000000000000000000000000000000000000000000081565b600b546102c69060ff1681565b610250600c5481565b61025061049e366004613486565b612098565b60015461029c906001600160a01b031681565b6102507f000000000000000000000000000000000000000000000000000000000000000081565b6102336104eb3660046132ab565b612284565b6102336104fe366004613351565b612412565b6102506105113660046132db565b61275f565b61025060085481565b61023361052d366004613307565b61292d565b6001600160a01b038116600090815260008051602061385d8339815191526020526040902054600d9060ff166105845760405162461bcd60e51b815260040161057b91906134be565b60405180910390fd5b503360009081527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe056020526040902054600e9060ff166105d75760405162461bcd60e51b815260040161057b91906134be565b5060006105e4828461275f565b60405163079cc67960e41b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906379cc679090604401600060405180830381600087803b15801561064f57600080fd5b505af1158015610663573d6000803e3d6000fd5b50506007546106759250905082612e6b565b60075561068c6001600160a01b0383163385612ead565b60408051848152602081018390526001600160a01b038416917fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb91015b60405180910390a2505050565b6001600160a01b038216600090815260008051602061383d833981519152602052604090205460ff161561075c573360009081527fc59312466997bb42aaaf719ece141047820e6b34531e1670dc1852a453648f0f6020526040902054600e9060ff166107565760405162461bcd60e51b815260040161057b91906134be565b506107b0565b3360009081527f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa06020526040902054600e9060ff166107ae5760405162461bcd60e51b815260040161057b91906134be565b505b6001600160a01b038216600090815260008051602061385d833981519152602052604090205460ff168061080957506001600160a01b038216600090815260008051602061383d833981519152602052604090205460ff165b1561085a57600061081a838361275f565b90506108246108b5565b8111156010906108475760405162461bcd60e51b815260040161057b91906134be565b506007546108559082612e6b565b600755505b61086e6001600160a01b0383163383612ead565b816001600160a01b03167fb4460e34f1e91c4fa28eb7fac4cbd88cf530ef54a67e1978cd5edd9f77033ead826040516108a991815260200190565b60405180910390a25050565b60006109516109486008547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190613566565b90612e6b565b60075490612e6b565b905090565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e551602052604090205460ff16806109c157503360009081527f5c6b02db8b672415ffad906d7ccee10bd53dbad7d0b29e2bc0e50c93d5f31093602052604090205460ff165b600e906109e15760405162461bcd60e51b815260040161057b91906134be565b5060405163079cc67960e41b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906379cc679090604401600060405180830381600087803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b505060025460405163ae5c6cd360e01b815260048101859052336024820152600060448201526001600160a01b03909116925063ae5c6cd39150606401600060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b5050600854610adb9250905082612e6b565b600855600954610aeb9082612e6b565b60095560408051828152602081018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169133917fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309910160405180910390a350565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610bee573360009081527f5c6b02db8b672415ffad906d7ccee10bd53dbad7d0b29e2bc0e50c93d5f310936020526040902054600e9060ff16610be55760405162461bcd60e51b815260040161057b91906134be565b50829050610c98565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e5516020526040902054600e9060ff16610c405760405162461bcd60e51b815260040161057b91906134be565b506001600160a01b038216600090815260008051602061385d8339815191526020526040902054600d9060ff16610c8a5760405162461bcd60e51b815260040161057b91906134be565b50610c95828461275f565b90505b600f81610cb85760405162461bcd60e51b815260040161057b91906134be565b5060025460405163ae5c6cd360e01b815260048101839052336024820152600160448201526001600160a01b039091169063ae5c6cd390606401600060405180830381600087803b158015610d0c57600080fd5b505af1158015610d20573d6000803e3d6000fd5b5050336000818152600660205260409081902054600254915163313bc71360e21b8152600481019390935293506001600160a01b0316915063c4ef1c4c90602401602060405180830381865afa158015610d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da29190613566565b1115610df05760405162461bcd60e51b815260206004820152601760248201527f54726561737572793a2065786365656473206c696d6974000000000000000000604482015260640161057b565b600854610dfd9082612fba565b6008819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610ed3576040516340c10f1960e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b158015610ea557600080fd5b505af1158015610eb9573d6000803e3d6000fd5b5050600954610ecb9250905082612fba565b600955610ef7565b600754610ee09082612e6b565b600755610ef76001600160a01b0383163385612ead565b60408051848152602081018390526001600160a01b0384169133917f7e1a939bed137a819b5d2979822c67f877689f7a863d5e4cb57cdca97b2977d691015b60405180910390a3505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fba919061357f565b6001600160a01b0316336001600160a01b031614600090610fee5760405162461bcd60e51b815260040161057b91906134be565b506001600160a01b03821661100257600080fd5b600b5460ff1615156001146110595760405162461bcd60e51b815260206004820181905260248201527f54696d656c6f636b2069732064697361626c65642c2075736520656e61626c65604482015260640161057b565b6000611085437f0000000000000000000000000000000000000000000000000000000000000000612fba565b9050600384600a81111561109b5761109b6133c6565b14806110b85750600684600a8111156110b6576110b66133c6565b145b156110f5576110f26110eb7f00000000000000000000000000000000000000000000000000000000000000006002613019565b4390612fba565b90505b600a6040518060c0016040528086600a811115611114576111146133c6565b81526001600160a01b0380871660208084019190915290861660408301526060820185905260006080830181905260a090920182905283546001818101865594835291208251600490920201805492939092839160ff199091169083600a811115611181576111816133c6565b021790555060208201518154610100600160a81b0319166101006001600160a01b03928316810291909117835560408401516001840180546001600160a01b03191691909316179091556060830151600283015560808301516003909201805460a09094015161ffff1990941692151561ff001916929092179215150291909117905583600a811115611216576112166133c6565b6040516001600160a01b03851681527fc822ff41836a6dc998393c71843db8adcbbf01721f41b32389f6838ecb1ea9c89060200160405180910390a250505050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cf919061357f565b6001600160a01b0316336001600160a01b0316146000906113035760405162461bcd60e51b815260040161057b91906134be565b5060026000908152600360209081527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d8054604080518285028101850190915281815284939092919083018282801561138557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611367575b5050505050905060005b81518110156114b757600260009081526004602052825160008051602061385d83398151915291908490849081106113c9576113c961359c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156114a5576114a261149b83838151811061140d5761140d61359c565b60200260200101518484815181106114275761142761359c565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611477573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190613566565b8490612fba565b92505b806114af816135c8565b91505061138f565b5060056000908152600360209081527f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b465942250805460408051828502810185019091528181529283018282801561153457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611516575b5050505050905060005b81518110156115d857600560009081526004602052825160008051602061383d83398151915291908490849081106115785761157861359c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156115c6576115c36115bc83838151811061140d5761140d61359c565b8590612fba565b93505b806115d0816135c8565b91505061153e565b50600783905560405183907fec691f09f6924b27932253f85caf99bacc30360cc0e50a1cc4d2acc24601446690600090a2505050565b3360009081527f2645749a946633740611cfc8178319f0958659d6922e4bf7e3a08b44789f53a46020526040902054600e9060ff166116605760405162461bcd60e51b815260040161057b91906134be565b506116696108b5565b81111560109061168c5760405162461bcd60e51b815260040161057b91906134be565b506040516340c10f1960e01b81526001600160a01b038381166004830152602482018390527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b1580156116f757600080fd5b505af115801561170b573d6000803e3d6000fd5b50506040518381526001600160a01b03851692503391507f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050565b600a818154811061176357600080fd5b6000918252602090912060049091020180546001820154600283015460039093015460ff80841695506001600160a01b036101009485900481169593169382821692041686565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611821919061357f565b6001600160a01b0316336001600160a01b031614806118c75750600160009054906101000a90046001600160a01b03166001600160a01b031663452a93206040518163ffffffff1660e01b8152600401602060405180830381865afa15801561188e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b2919061357f565b6001600160a01b0316336001600160a01b0316145b6119135760405162461bcd60e51b815260206004820152601960248201527f4f6e6c7920676f7665726e6f72206f7220677561726469616e00000000000000604482015260640161057b565b60006004600084600a81111561192b5761192b6133c6565b600a81111561193c5761193c6133c6565b8152602080820192909252604090810160009081206001600160a01b03861682529092529020805460ff191691151591909117905581600a811115611983576119836133c6565b604080516001600160a01b0384168152600060208201527f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e171391016108a9565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a39919061357f565b6001600160a01b0316336001600160a01b031614600090611a6d5760405162461bcd60e51b815260040161057b91906134be565b506001600a8281548110611a8357611a8361359c565b60009182526020909120600490910201600301805460ff191691151591909117905550565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1f919061357f565b6001600160a01b0316336001600160a01b031614600090611b535760405162461bcd60e51b815260040161057b91906134be565b50600180546001600160a01b0319166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c15919061357f565b6001600160a01b0316336001600160a01b031614600090611c495760405162461bcd60e51b815260040161057b91906134be565b50600b5460ff161515600114611ca15760405162461bcd60e51b815260206004820152601960248201527f74696d656c6f636b20616c72656164792064697361626c656400000000000000604482015260640161057b565b600c5415801590611cb4575043600c5411155b15611cc557600b805460ff19169055565b611cf36110eb7f00000000000000000000000000000000000000000000000000000000000000006007613019565b600c55565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6f919061357f565b6001600160a01b0316336001600160a01b031614600090611da35760405162461bcd60e51b815260040161057b91906134be565b50600b54610100900460ff1615611df25760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161057b565b600b805461ffff1916610101179055565b60006009547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8a9190613566565b61095191906135e3565b60008060006003600085600a811115611eaf57611eaf6133c6565b600a811115611ec057611ec06133c6565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611f2257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f04575b5050505050905060005b8151811015611f8757818181518110611f4757611f4761359c565b60200260200101516001600160a01b0316866001600160a01b03161415611f7557600193509150611f919050565b80611f7f816135c8565b915050611f2c565b5060008092509250505b9250929050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200f919061357f565b6001600160a01b0316336001600160a01b0316146000906120435760405162461bcd60e51b815260040161057b91906134be565b506001600160a01b03909116600090815260066020526040902055565b6003602052816000526040600020818154811061207c57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001600160a01b038216600090815260008051602061385d833981519152602052604081205460ff16156121245760046000805b600a8111156120dd576120dd6133c6565b815260208082019290925260409081016000908120338252909252902054600e9060ff1661211e5760405162461bcd60e51b815260040161057b91906134be565b50612177565b6001600160a01b038316600090815260008051602061383d833981519152602052604090205460ff161561215c5760046000816120cc565b600f60405162461bcd60e51b815260040161057b91906134be565b61218c6001600160a01b038416333087613098565b6000612198848661275f565b90506121a48184612e6b565b6040516340c10f1960e01b8152336004820152602481018290529092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561220f57600080fd5b505af1158015612223573d6000803e3d6000fd5b50506007546122359250905082612fba565b60075560408051868152602081018390526001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2509392505050565b3360009081527fbeb3bad75134cb432e5707980e3245c52c5998a1125ee30f2f0dbf3925b1e5516020526040902054600e9060ff166122d65760405162461bcd60e51b815260040161057b91906134be565b506001600160a01b038116600090815260008051602061385d8339815191526020526040902054600d9060ff166123205760405162461bcd60e51b815260040161057b91906134be565b506123366001600160a01b038216333085613098565b6000612342828461275f565b60025460405163ae5c6cd360e01b815260048101839052336024820152600060448201529192506001600160a01b03169063ae5c6cd390606401600060405180830381600087803b15801561239657600080fd5b505af11580156123aa573d6000803e3d6000fd5b50506008546123bc9250905082612e6b565b6008556007546123cc9082612fba565b60075560408051848152602081018390526001600160a01b0384169133917fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f3099101610f36565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015612465573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612489919061357f565b6001600160a01b0316336001600160a01b0316146000906124bd5760405162461bcd60e51b815260040161057b91906134be565b50600b5460ff16156125055760405162461bcd60e51b815260206004820152601160248201527055736520717565756554696d656c6f636b60781b604482015260640161057b565b600983600a811115612519576125196133c6565b141561253f57600280546001600160a01b0319166001600160a01b03841617905561270e565b60016004600085600a811115612557576125576133c6565b600a811115612568576125686133c6565b8152602080820192909252604090810160009081206001600160a01b03871682529092529020805460ff1916911515919091179055600583600a8111156125b1576125b16133c6565b14156125e6576001600160a01b03828116600090815260056020526040902080546001600160a01b0319169183169190911790555b60006125f28385611e94565b5090508061270c576003600085600a811115612610576126106133c6565b600a811115612621576126216133c6565b8152602080820192909252604001600090812080546001810182559082529190200180546001600160a01b0319166001600160a01b038516179055600584600a811115612670576126706133c6565b148061268d5750600284600a81111561268b5761268b6133c6565b145b1561270c5760008061269f8587611e94565b915091508115612709576003600087600a8111156126bf576126bf6133c6565b600a8111156126d0576126d06133c6565b815260200190815260200160002081815481106126ef576126ef61359c565b600091825260209091200180546001600160a01b03191690555b50505b505b82600a811115612720576127206133c6565b604080516001600160a01b0385168152600160208201527f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e171391016106c9565b600061286e836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c691906135fa565b6127d190600a613701565b6128687f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612832573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061285691906135fa565b61286190600a613701565b8590613019565b906131b3565b6001600160a01b038416600090815260008051602061383d833981519152602052604090205490915060ff1615612927576001600160a01b0383811660008181526005602052604090819020549051634249719f60e01b815260048101929092526024820185905290911690634249719f90604401602060405180830381865afa158015612900573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129249190613566565b90505b92915050565b600b5460ff1615156001146129845760405162461bcd60e51b815260206004820181905260248201527f54696d656c6f636b2069732064697361626c65642c2075736520656e61626c65604482015260640161057b565b6000600a82815481106129995761299961359c565b600091825260209091206040805160c081019091526004909202018054829060ff16600a8111156129cc576129cc6133c6565b600a8111156129dd576129dd6133c6565b815281546001600160a01b03610100918290048116602084015260018401541660408301526002830154606083015260039092015460ff80821615156080808501919091529390910416151560a09091015281015190915015612a825760405162461bcd60e51b815260206004820152601960248201527f416374696f6e20686173206265656e206e756c6c696669656400000000000000604482015260640161057b565b8060a0015115612ad45760405162461bcd60e51b815260206004820181905260248201527f416374696f6e2068617320616c7265616479206265656e206578656375746564604482015260640161057b565b8060600151431015612b205760405162461bcd60e51b815260206004820152601560248201527454696d656c6f636b206e6f7420636f6d706c65746560581b604482015260640161057b565b60098151600a811115612b3557612b356133c6565b1415612b64576020810151600280546001600160a01b0319166001600160a01b03909216919091179055612dd2565b6001600460008360000151600a811115612b8057612b806133c6565b600a811115612b9157612b916133c6565b815260208082019290925260409081016000908120858401516001600160a01b031682529092529020805460ff191691151591909117905560058151600a811115612bde57612bde6133c6565b1415612c1f576040818101516020808401516001600160a01b039081166000908152600590925292902080546001600160a01b031916929091169190911790555b6000612c3382602001518360000151611e94565b50905080612dd057600360008360000151600a811115612c5557612c556133c6565b600a811115612c6657612c666133c6565b81526020808201929092526040016000908120848301518154600181018355918352929091200180546001600160a01b0319166001600160a01b0390921691909117905560058251600a811115612cbf57612cbf6133c6565b1415612d3f57600080612cd784602001516002611e94565b915091508115612d3857600260005260036020527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d805482908110612d1e57612d1e61359c565b600091825260209091200180546001600160a01b03191690555b5050612dd0565b60028251600a811115612d5457612d546133c6565b1415612dd057600080612d6c84602001516005611e94565b915091508115612dcd57600560005260036020527f405aad32e1adbac89bb7f176e338b8fc6e994ca210c9bb7bdca249b465942250805482908110612db357612db361359c565b600091825260209091200180546001600160a01b03191690555b50505b505b6001600a8381548110612de757612de761359c565b6000918252602090912060036004909202010180549115156101000261ff00199092169190911790558051600a811115612e2357612e236133c6565b602080830151604080516001600160a01b0390921682526001928201929092527f7531a7aefe3985500c4dec2dcb6049a708f14c6a8a9022b435b8841bdb8e171391016108a9565b600061292483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506131f5565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691612f099190613740565b6000604051808303816000865af19150503d8060008114612f46576040519150601f19603f3d011682016040523d82523d6000602084013e612f4b565b606091505b5091509150818015612f75575080511580612f75575080806020019051810190612f75919061375c565b612fb35760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161057b565b5050505050565b600080612fc7838561377e565b9050838110156129245760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161057b565b60008261302857506000612927565b60006130348385613796565b90508261304185836137cb565b146129245760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161057b565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916130fc9190613740565b6000604051808303816000865af19150503d8060008114613139576040519150601f19603f3d011682016040523d82523d6000602084013e61313e565b606091505b5091509150818015613168575080511580613168575080806020019051810190613168919061375c565b6131ab5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161057b565b505050505050565b600061292483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061322f565b600081848411156132195760405162461bcd60e51b815260040161057b91906137df565b50600061322684866135e3565b95945050505050565b600081836132505760405162461bcd60e51b815260040161057b91906137df565b50600061325d84866137cb565b90506132698486613812565b6132738286613796565b61327d919061377e565b851461328b5761328b613826565b949350505050565b6001600160a01b03811681146132a857600080fd5b50565b600080604083850312156132be57600080fd5b8235915060208301356132d081613293565b809150509250929050565b600080604083850312156132ee57600080fd5b82356132f981613293565b946020939093013593505050565b60006020828403121561331957600080fd5b5035919050565b60006020828403121561333257600080fd5b813561292481613293565b8035600b811061334c57600080fd5b919050565b60008060006060848603121561336657600080fd5b61336f8461333d565b9250602084013561337f81613293565b9150604084013561338f81613293565b809150509250925092565b600080604083850312156133ad57600080fd5b6133b68361333d565b915060208301356132d081613293565b634e487b7160e01b600052602160045260246000fd5b60c08101600b88106133fe57634e487b7160e01b600052602160045260246000fd5b9681526001600160a01b03958616602082015293909416604084015260608301919091521515608082015290151560a09091015290565b6000806040838503121561344857600080fd5b823561345381613293565b91506134616020840161333d565b90509250929050565b6000806040838503121561347d57600080fd5b6132f98361333d565b60008060006060848603121561349b57600080fd5b8335925060208401356134ad81613293565b929592945050506040919091013590565b600060208083526000845481600182811c9150808316806134e057607f831692505b8583108114156134fe57634e487b7160e01b85526022600452602485fd5b87860183815260200181801561351b576001811461352c57613557565b60ff19861682528782019650613557565b60008b81526020902060005b8681101561355157815484820152908501908901613538565b83019750505b50949998505050505050505050565b60006020828403121561357857600080fd5b5051919050565b60006020828403121561359157600080fd5b815161292481613293565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156135dc576135dc6135b2565b5060010190565b6000828210156135f5576135f56135b2565b500390565b60006020828403121561360c57600080fd5b815160ff8116811461292457600080fd5b600181815b8085111561365857816000190482111561363e5761363e6135b2565b8085161561364b57918102915b93841c9390800290613622565b509250929050565b60008261366f57506001612927565b8161367c57506000612927565b8160018114613692576002811461369c576136b8565b6001915050612927565b60ff8411156136ad576136ad6135b2565b50506001821b612927565b5060208310610133831016604e8410600b84101617156136db575081810a612927565b6136e5838361361d565b80600019048211156136f9576136f96135b2565b029392505050565b600061292460ff841683613660565b60005b8381101561372b578181015183820152602001613713565b8381111561373a576000848401525b50505050565b60008251613752818460208701613710565b9190910192915050565b60006020828403121561376e57600080fd5b8151801515811461292457600080fd5b60008219821115613791576137916135b2565b500190565b60008160001904831182151516156137b0576137b06135b2565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826137da576137da6137b5565b500490565b60208152600082518060208401526137fe816040850160208701613710565b601f01601f19169190910160400192915050565b600082613821576138216137b5565b500690565b634e487b7160e01b600052600160045260246000fdfe04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f0591da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7a164736f6c634300080a000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "baseSupply()": {
        "details": "use this any time you need to query supply",
        "returns": {
          "_0": "uint256"
        }
      },
      "deposit(uint256,address,uint256)": {
        "params": {
          "_amount": "uint256",
          "_profit": "uint256",
          "_token": "address"
        },
        "returns": {
          "send_": "uint256"
        }
      },
      "disable(uint8,address)": {
        "params": {
          "_status": "STATUS",
          "_toDisable": "address"
        }
      },
      "enable(uint8,address,address)": {
        "params": {
          "_address": "address",
          "_calculator": "address",
          "_status": "STATUS"
        }
      },
      "excessReserves()": {
        "returns": {
          "_0": "uint"
        }
      },
      "execute(uint256)": {
        "params": {
          "_index": "uint256"
        }
      },
      "incurDebt(uint256,address)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        }
      },
      "indexInRegistry(address,uint8)": {
        "returns": {
          "_0": "(bool, uint256)"
        }
      },
      "manage(address,uint256)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        }
      },
      "mint(address,uint256)": {
        "params": {
          "_amount": "uint256",
          "_recipient": "address"
        }
      },
      "nullify(uint256)": {
        "params": {
          "_index": "uint256"
        }
      },
      "queueTimelock(uint8,address,address)": {
        "params": {
          "_address": "address",
          "_calculator": "address",
          "_status": "STATUS"
        }
      },
      "repayDebtWithOHM(uint256)": {
        "params": {
          "_amount": "uint256"
        }
      },
      "repayDebtWithReserve(uint256,address)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        }
      },
      "setDebtLimit(address,uint256)": {
        "params": {
          "_address": "address",
          "_limit": "uint256"
        }
      },
      "tokenValue(address,uint256)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        },
        "returns": {
          "value_": "uint256"
        }
      },
      "withdraw(uint256,address)": {
        "params": {
          "_amount": "uint256",
          "_token": "address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "auditReserves()": {
        "notice": "takes inventory of all tracked assetsalways consolidate to recognized reserves before audit"
      },
      "baseSupply()": {
        "notice": "returns supply metric that cannot be manipulated by debt"
      },
      "deposit(uint256,address,uint256)": {
        "notice": "allow approved address to deposit an asset for OHM"
      },
      "disable(uint8,address)": {
        "notice": "disable permission from address"
      },
      "disableTimelock()": {
        "notice": "disables timelocked functions"
      },
      "enable(uint8,address,address)": {
        "notice": "enable permission from queue"
      },
      "excessReserves()": {
        "notice": "returns excess reserves not backing tokens"
      },
      "execute(uint256)": {
        "notice": "enable queued permission"
      },
      "incurDebt(uint256,address)": {
        "notice": "allow approved address to borrow reserves"
      },
      "indexInRegistry(address,uint8)": {
        "notice": "check if registry contains address"
      },
      "initialize()": {
        "notice": "enables timelocks after initilization"
      },
      "manage(address,uint256)": {
        "notice": "allow approved address to withdraw assets"
      },
      "mint(address,uint256)": {
        "notice": "mint new OHM using excess reserves"
      },
      "nullify(uint256)": {
        "notice": "cancel timelocked action"
      },
      "queueTimelock(uint8,address,address)": {
        "notice": "queue address to receive permission"
      },
      "repayDebtWithOHM(uint256)": {
        "notice": "allow approved address to repay borrowed reserves with OHM"
      },
      "repayDebtWithReserve(uint256,address)": {
        "notice": "allow approved address to repay borrowed reserves with reserves"
      },
      "setDebtLimit(address,uint256)": {
        "notice": "set max debt for address"
      },
      "tokenValue(address,uint256)": {
        "notice": "returns OHM valuation of asset"
      },
      "withdraw(uint256,address)": {
        "notice": "allow approved address to burn OHM for reserves"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23622,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "UNAUTHORIZED",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 23625,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "authority",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IOlympusAuthority)15018"
      },
      {
        "astId": 6796,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "sOHM",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IsOHM)15656"
      },
      {
        "astId": 6802,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "registry",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_enum(STATUS)6776,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 6809,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "permissions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_enum(STATUS)6776,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 6813,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "bondCalculator",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 6817,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "debtLimit",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6819,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "totalReserves",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 6821,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "totalDebt",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 6823,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "ohmDebt",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 6827,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "permissionQueue",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_struct(Queue)6790_storage)dyn_storage"
      },
      {
        "astId": 6831,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "timelockEnabled",
        "offset": 0,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 6833,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "initialized",
        "offset": 1,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 6835,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "onChainGovernanceTimelock",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 6838,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "notAccepted",
        "offset": 0,
        "slot": "13",
        "type": "t_string_storage"
      },
      {
        "astId": 6841,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "notApproved",
        "offset": 0,
        "slot": "14",
        "type": "t_string_storage"
      },
      {
        "astId": 6844,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "invalidToken",
        "offset": 0,
        "slot": "15",
        "type": "t_string_storage"
      },
      {
        "astId": 6847,
        "contract": "contracts/Treasury.sol:OlympusTreasury",
        "label": "insufficientReserves",
        "offset": 0,
        "slot": "16",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Queue)6790_storage)dyn_storage": {
        "base": "t_struct(Queue)6790_storage",
        "encoding": "dynamic_array",
        "label": "struct OlympusTreasury.Queue[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IOlympusAuthority)15018": {
        "encoding": "inplace",
        "label": "contract IOlympusAuthority",
        "numberOfBytes": "20"
      },
      "t_contract(IsOHM)15656": {
        "encoding": "inplace",
        "label": "contract IsOHM",
        "numberOfBytes": "20"
      },
      "t_enum(STATUS)6776": {
        "encoding": "inplace",
        "label": "enum OlympusTreasury.STATUS",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_enum(STATUS)6776,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_enum(STATUS)6776",
        "label": "mapping(enum OlympusTreasury.STATUS => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_enum(STATUS)6776,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_enum(STATUS)6776",
        "label": "mapping(enum OlympusTreasury.STATUS => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Queue)6790_storage": {
        "encoding": "inplace",
        "label": "struct OlympusTreasury.Queue",
        "members": [
          {
            "astId": 6779,
            "contract": "contracts/Treasury.sol:OlympusTreasury",
            "label": "managing",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(STATUS)6776"
          },
          {
            "astId": 6781,
            "contract": "contracts/Treasury.sol:OlympusTreasury",
            "label": "toPermit",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6783,
            "contract": "contracts/Treasury.sol:OlympusTreasury",
            "label": "calculator",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 6785,
            "contract": "contracts/Treasury.sol:OlympusTreasury",
            "label": "timelockEnd",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 6787,
            "contract": "contracts/Treasury.sol:OlympusTreasury",
            "label": "nullify",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 6789,
            "contract": "contracts/Treasury.sol:OlympusTreasury",
            "label": "executed",
            "offset": 1,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}